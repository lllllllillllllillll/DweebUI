{
  "version": "2",
  "templates": [
    {
      "type": 1,
      "name": "heimdall",
      "title": "Heimdall",
      "note": "",
      "description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way. <a href='https://hub.docker.com/r/linuxserver/heimdall/' target='_blank'>Docker Hub</a>",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/heimdall.png",
      "image": "lscr.io/linuxserver/heimdall:latest",
      "categories": [
        "Dashboard"
      ],
      "ports": [
        "8001:80/tcp",
        "4001:443/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/heimdall",
          "container": "/config"
        }
      ],
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        }
      ],
      "labels": [
        {
          "name": "traefik.enable",
          "value": "true"
        },
        {
          "name": "traefik.http.services.heimdall.loadbalancer.server.port",
          "value": "80"
        },
        {
          "name": "traefik.http.routers.heimdall.entrypoints",
          "value": "websecure"
        },
        {
          "name": "traefik.http.routers.heimdall.tls.certresolver",
          "value": "mydnschallenge"
        }
      ]
    },
    {
      "type": 1,
      "name": "homepage",
      "title": "Homepage",
      "description": "A modern (fully static, fast), secure (fully proxied), highly customizable application dashboard with integrations for more than 25 services and translations for over 15 languages. Easily configured via YAML files (or discovery via docker labels). <a href='https://github.com/benphelps/homepage/'>Github</a>",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/homepage.png",
      "image": "ghcr.io/benphelps/homepage:latest",
      "categories": [
        "Dashboard"
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/homepage",
          "container": "/app/config"
        },
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock:ro"
        }
      ],
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        }
      ]
    },
    {
      "type": 1,
      "name": "jackett",
      "title": "Jackett",
      "description": "Jackett works as a proxy server: it translates queries from apps (Sonarr, SickRage, CouchPotato, Mylar, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. <a href='https://github.com/Jackett/Jackett/'>Github</a>",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/jackett.png",
      "image": "linuxserver/jackett:latest",
      "categories": [
        "Downloaders",
        "Tools"
      ],
      "ports": [
        "9117:9117/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/jackett",
          "container": "/config"
        },
        {
          "bind": "/media",
          "container": "/downloads"
        }
      ],
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        }
      ]
    },
    {
      "type": 1,
      "title": "Librespeed",
      "name": "librespeed",
      "note": "",
      "description": "Librespeed is a very lightweight speed test implemented in Javascript, using XMLHttpRequest and Web Workers. No Flash, No Java, No Websocket, No Bullshit. <a href='https://github.com/librespeed/speedtest/'>Github</a>",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/librespeed.png",
      "categories": [
        "Networking",
        "Tools"
      ],
      "image": "adolfintel/speedtest",
      "ports": [
        "81:81/tcp"
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "MODE",
          "label": "MODE",
          "default": "standalone",
          "description": "Set the mode."
        },
        {
          "name": "PASSWORD",
          "label": "PASSWORD",
          "default": "SOMEPASSWORD",
          "description": "Password to access the stats page. If not set, stats page will not allow accesses."
        },
        {
          "name": "WEBPORT",
          "label": "WEBPORT",
          "default": "81",
          "description": "Allows choosing a custom port for the included web server."
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "name": "ombi",
      "title": "Ombi",
      "description": "Ombi allows you to host your own Plex Request and user management system. If you are sharing your Plex server with other users, allow them to request new content using an easy to manage interface. . [There is no official Ombi docker image. This one is created and maintained by <a href='https://hub.docker.com/r/linuxserver/ombi/' target='_blank'>linuxserver.io</a>]",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/ombi.png",
      "image": "linuxserver/ombi:latest",
      "categories": [
        "Tools"
      ],
      "ports": [
        "3579:3579/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/ombi",
          "container": "/config"
        },
        {
          "bind": "/etc/localtime",
          "container": "/etc/localtime:ro"
        }
      ],
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "preset": true
        }
      ]
    },
    {
      "type": 1,
      "name": "overseerr",
      "title": "Overseerr",
      "description": "Overseerr is a request management and media discovery tool built to work with your existing Plex ecosystem. <a href='https://overseerr.dev/' target='_blank'>Official Site</a>",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/overseerr.png",
      "image": "sctx/overseerr:latest",
      "categories": [
        "Multimedia",
        "Tools"
      ],
      "ports": [
        "5055/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/overseerr",
          "container": "/app/config"
        },
        {
          "container": "/etc/localtime",
          "bind": "/etc/localtime:ro",
          "readonly": true
        }
      ],
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        }
      ]
    },
    {
      "type": 1,
      "name": "plex",
      "title": "Plex",
      "description": "Plex organizes your video, music, and photo collections and streams them to all of your screens.",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/plex.png",
      "image": "linuxserver/plex:latest",
      "network": "host",
      "categories": [
        "Media Server",
        "Paid"
      ],
      "privileged": true,
      "ports": [],
      "volumes": [
        {
          "bind": "/home/docker/plex",
          "container": "/config"
        },
        {
          "bind": "/media/tvshows",
          "container": "/data/tvshows"
        },
        {
          "bind": "/media/movies",
          "container": "/data/movies"
        },
        {
          "bind": "/media/music",
          "container": "/data/music"
        },
        {
          "container": "/transcode"
        }
      ],
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        },
        {
          "name": "VERSION",
          "label": "VERSION",
          "default": "latest"
        }
      ]
    },
    {
      "type": 1,
      "name": "prowlarr",
      "title": "Prowlarr",
      "description": "Prowlarr is a indexer manager/proxy built on the popular arr .net/reactjs base stack to integrate with your various PVR apps. Prowlarr supports both Torrent Trackers and Usenet Indexers. ",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/prowlarr.png",
      "image": "ghcr.io/linuxserver/prowlarr:develop",
      "categories": [
        "Downloaders",
        "Arr"
      ],
      "ports": [
        "9696/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/prowlarr",
          "container": "/config"
        },
        {
          "bind": "/etc/localtime:ro",
          "container": "/etc/localtime:ro",
          "readonly": true
        }
      ],
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles",
          "preset": true
        }
      ]
    },
    {
      "type": 1,
      "name": "radarr",
      "title": "Radarr",
      "note": "There is no official Radarr docker image. This one is created and maintained by <a href='https://hotio.dev/containers/radarr/' target='_blank'>Hotio.dev</a>",
      "description": "Radarr is a movie collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new movies and will interface with clients and indexers to grab, sort, and rename them. <a href='https://radarr.video/#downloads-v3-docker' target='_blank'>Official Site</a>",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/radarr.png",
      "image": "ghcr.io/hotio/radarr",
      "categories": [
        "Downloaders",
        "Arr"
      ],
      "network": "AppBridge",
      "ports": [
        "7878:7878/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/radarr",
          "container": "/config"
        }
      ],
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "preset": true
        }
      ]
    },
    {
      "type": 1,
      "name": "readarr",
      "title": "Readarr",
      "description": "Readarr is an ebook and audiobook collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new books from your favorite authors and will grab, sort, and rename them.",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/readarr.png",
      "image": "ghcr.io/linuxserver/readarr:nightly",
      "categories": [
        "Downloaders",
        "Arr"
      ],
      "ports": [
        "8787/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/readarr",
          "container": "/config"
        },
        {
          "bind": "/media/downloads/ebooks",
          "container": "/downloads"
        },
        {
          "container": "/books",
          "bind": "/media/storage/ebooks"
        },
        {
          "container": "/blackhole",
          "bind": "/media/temp/blackhole/ebooks"
        },
        {
          "container": "/etc/localtime",
          "bind": "/etc/localtime",
          "readonly": true
        }
      ],
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        }
      ]
    },
    {
      "type": 1,
      "name": "scrutiny",
      "title": "Scrutiny",
      "description": "WebUI for smartd S.M.A.R.T monitoring",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/scrutiny.png",
      "image": "analogj/scrutiny:latest",
      "categories": [
        "Monitoring"
      ],
      "ports": [
        "8080/tcp"
      ],
      "volumes": [
        {
          "container": "/scrutiny/config/",
          "bind": "/opt/mediadepot/apps/scrutiny"
        },
        {
          "container": "/run/udev",
          "bind": "/run/udev",
          "readonly": true
        }
      ],
      "env": [],
      "labels": [
        {
          "name": "traefik.enable",
          "value": "true"
        },
        {
          "name": "traefik.http.services.scrutiny.loadbalancer.server.port",
          "value": "8080"
        },
        {
          "name": "traefik.http.routers.scrutiny.entrypoints",
          "value": "websecure"
        },
        {
          "name": "traefik.http.routers.scrutiny.tls.certresolver",
          "value": "mydnschallenge"
        }
      ]
    },
    {
      "type": 1,
      "name": "sonarr",
      "title": "Sonarr",
      "description": "Sonarr is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/sonarr.png",
      "image": "linuxserver/sonarr:latest",
      "categories": [
        "Downloaders",
        "Arr"
      ],
      "ports": [
        "8989/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/opt/mediadepot/apps/sonarr"
        },
        {
          "container": "/downloads",
          "bind": "/media/storage/downloads/tvshows"
        },
        {
          "container": "/tv",
          "bind": "/media/storage/tvshows"
        },
        {
          "container": "/blackhole",
          "bind": "/media/temp/blackhole/tvshows"
        },
        {
          "container": "/etc/localtime",
          "bind": "/etc/localtime",
          "readonly": true
        }
      ],
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "preset": true
        }
      ],
      "labels": [
        {
          "name": "traefik.enable",
          "value": "true"
        },
        {
          "name": "traefik.http.services.sonarr.loadbalancer.server.port",
          "value": "8989"
        },
        {
          "name": "traefik.http.routers.sonarr.entrypoints",
          "value": "websecure"
        },
        {
          "name": "traefik.http.routers.sonarr.tls.certresolver",
          "value": "mydnschallenge"
        }
      ]
    },
    {
      "type": 1,
      "name": "tautulli",
      "title": "Tautulli",
      "description": "A Python based monitoring and tracking tool for Plex Media Server.",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/tautulli.png",
      "image": "linuxserver/tautulli:latest",
      "categories": [
        "MediaServer:Other",
        "Tools"
      ],
      "ports": [
        "8181/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/opt/mediadepot/apps/tautulli"
        }
      ],
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        }
      ],
      "labels": [
        {
          "name": "traefik.enable",
          "value": "true"
        },
        {
          "name": "traefik.http.services.tautulli.loadbalancer.server.port",
          "value": "8181"
        },
        {
          "name": "traefik.http.routers.tautulli.entrypoints",
          "value": "websecure"
        },
        {
          "name": "traefik.http.routers.tautulli.tls.certresolver",
          "value": "mydnschallenge"
        }
      ]
    },
    {
      "type": 1,
      "name": "watchtower",
      "title": "Watchtower",
      "description": "Automatically update running Docker containers",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/watchtower.png",
      "image": "containrrr/watchtower:latest",
      "command": "--cleanup --label-enable",
      "categories": [
        "Monitoring"
      ],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ],
      "env": []
    },
    {
      "type": 1,
      "name": "wizarr",
      "title": "Wizarr",
      "description": "Wizarr is an advanced user invitation and management system for Jellyfin, Plex, Emby etc. ",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/wizarr.png",
      "image": "ghcr.io/wizarrrr/wizarr",
      "categories": [
        "Arr"
      ],
      "ports": [
        "5690/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/wizarr",
          "container": "/data/database"
        },
        {
          "bind": "/etc/localtime:ro",
          "container": "/etc/localtime",
          "readonly": true
        }
      ],
      "env": [
        {
          "name": "APP_URL",
          "label": "APP_URL",
          "default": "https://wizarr.domain.com"
        }
      ],
      "labels": [
        {
          "name": "traefik.enable",
          "value": "true"
        },
        {
          "name": "traefik.http.services.wizarr.loadbalancer.server.port",
          "value": "5690"
        },
        {
          "name": "traefik.http.routers.wizarr.entrypoints",
          "value": "websecure"
        },
        {
          "name": "traefik.http.routers.wizarr.tls.certresolver",
          "value": "mydnschallenge"
        }
      ]
    },
    {
      "categories": [
        "Downloaders"
      ],
      "description": "Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, \u00ef\u00bf\u00bdTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.",
      "env": [
        {
          "label": "PUID",
          "name": "PUID",
          "set": "1000"
        },
        {
          "label": "PGID",
          "name": "PGID",
          "set": "1000"
        },
        {
          "label": "TZ",
          "name": "TZ",
          "set": "America/Chicago"
        }
      ],
      "image": "linuxserver/transmission:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/transmission.png",
      "platform": "linux",
      "ports": [
        "9091/tcp",
        "51413/tcp",
        "51413/udp"
      ],
      "title": "Transmission",
      "name": "transmission",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/transmission",
          "container": "/config"
        },
        {
          "bind": "/media",
          "container": "/downloads"
        },
        {
          "container": "/watch"
        }
      ]
    },
    {
      "categories": [
        "Video"
      ],
      "description": "Headless installation of Kodi.",
      "env": [
        {
          "label": "PUID",
          "name": "PUID",
          "set": "1000"
        },
        {
          "label": "PGID",
          "name": "PGID",
          "set": "1000"
        },
        {
          "label": "TZ",
          "name": "TZ",
          "set": "America/Chicago"
        }
      ],
      "image": "linuxserver/kodi-headless:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/kodi.png",
      "platform": "linux",
      "ports": [
        "8080/tcp",
        "9777/udp"
      ],
      "title": "Kodi-Headless",
      "name": "kodi-headless",
      "type": 1,
      "volumes": [
        {
          "container": "/config/.kodi"
        }
      ]
    },
    {
      "categories": [
        "Backup:",
        "Cloud",
        "Other",
        "Tools"
      ],
      "description": "Syncthing replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet.",
      "env": [
        {
          "label": "PUID",
          "name": "PUID",
          "set": "1000"
        },
        {
          "label": "PGID",
          "name": "PGID",
          "set": "1000"
        },
        {
          "label": "TZ",
          "name": "TZ",
          "set": "America/Chicago"
        }
      ],
      "image": "linuxserver/syncthing:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/syncthing.png",
      "platform": "linux",
      "ports": [
        "8384/tcp",
        "21027/udp",
        "22000/tcp"
      ],
      "title": "Syncthing",
      "name": "syncthing",
      "type": 1,
      "volumes": [
        {
          "container": "/config"
        },
        {
          "container": "/sync"
        }
      ]
    },
    {
      "type": 1,
      "name": "mysql",
      "title": "MySQL",
      "note": "",
      "description": "MySQL is the world's most popular open source database. With its proven performance, reliability and ease-of-use, MySQL has become the leading database choice for web-based applications, covering the entire range from personal projects and websites, via e-commerce and information services, all the way to high profile web properties including Facebook, Twitter, YouTube, Yahoo! and many more. <a href='https://www.mysql.com/' target='_blank'>Website</a>. <a href='https://hub.docker.com/_/mysql' target='_blank'>Docker Hub</a>",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/mysql.png",
      "image": "mysql",
      "categories": [
        "Database"
      ],
      "volumes": [
        {
          "bind": "/home/docker/mysql",
          "container": "/var/lib/mysql",
          "mode": "rw"
        }
      ],
      "ports" : [
        {
          "host": "3306",
          "container": "3306"
        }
      ],
      "env": [
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root Password",
          "description": "Root password for MySQL",
          "type": "password",
          "default": "password"
        },
        {
          "name": "MYSQL_DATABASE",
          "label": "Database",
          "description": "Database name",
          "type": "text",
          "default": "heimdall"
        },
        {
          "name": "MYSQL_USER",
          "label": "User",
          "description": "Database user",
          "type": "text",
          "default": "heimdall"
        },
        {
          "name": "MYSQL_PASSWORD",
          "label": "Password",
          "description": "Database password",
          "type": "password",
          "default": "password"
        }
      ]
    },
    {
      "categories": [
        "Downloaders"
      ],
      "description": "Deluge is a lightweight, Free Software, cross-platform BitTorrent client providing: Full Encryption, WebUI, Plugin System, Much more...",
      "env": [
        {
          "label": "PUID",
          "name": "PUID",
          "set": "1000"
        },
        {
          "label": "PGID",
          "name": "PGID",
          "set": "1000"
        },
        {
          "label": "TZ",
          "name": "TZ",
          "set": "America/Chicago"
        }
      ],
      "image": "lscr.io/linuxserver/deluge:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/deluge.png",
      "platform": "linux",
      "title": "Deluge",
      "name": "deluge",
      "type": 1,
      "volumes": [
        {
          "container": "/config"
        },
        {
          "container": "/downloads"
        }
      ],
      "ports": [
        "8112/tcp",
        "6881/tcp",
        "6881/udp"
      ]
    },
    {
      "categories": [
        "Tools",
        "Proxy"
      ],
      "description": "Nginx is a web server with a strong focus on high concurrency, performance and low memory usage. It can also act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache.",
      "env": [
        {
          "label": "PUID",
          "name": "PUID",
          "set": "1000"
        },
        {
          "label": "PGID",
          "name": "PGID",
          "set": "1000"
        },
        {
          "label": "TZ",
          "name": "TZ",
          "set": "America/Chicago"
        }
      ],
      "image": "linuxserver/nginx:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/nginx.png",
      "platform": "linux",
      "ports": [
        "80/tcp",
        "443/tcp"
      ],
      "title": "Nginx",
      "name": "nginx",
      "type": 1,
      "volumes": [
        {
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Downloaders",
        "Arr"
      ],
      "description": "Lidarr is a music collection manager for Usenet and BitTorrent users.",
      "env": [
        {
          "label": "PUID",
          "name": "PUID",
          "set": "1000"
        },
        {
          "label": "PGID",
          "name": "PGID",
          "set": "1000"
        },
        {
          "label": "TZ",
          "name": "TZ",
          "set": "America/Chicago"
        }
      ],
      "image": "linuxserver/lidarr:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/lidarr.png",
      "platform": "linux",
      "ports": [
        "8686/tcp"
      ],
      "title": "Lidarr",
      "name": "lidarr",
      "type": 1,
      "volumes": [
        {
          "container": "/config"
        },
        {
          "container": "/downloads"
        },
        {
          "container": "/music"
        }
      ]
    },
    {
      "categories": [
        "Downloaders"
      ],
      "description": "The qBittorrent project aims to provide an open-source software alternative to \u00ef\u00bf\u00bdTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
      "env": [
        {
          "label": "PUID",
          "name": "PUID",
          "set": "1000"
        },
        {
          "label": "PGID",
          "name": "PGID",
          "set": "1000"
        },
        {
          "label": "TZ",
          "name": "TZ",
          "set": "America/Chicago"
        }
      ],
      "image": "linuxserver/qbittorrent:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/qbittorrent.png",
      "platform": "linux",
      "ports": [
        "6881/tcp",
        "6881/udp",
        "8080/tcp"
      ],
      "title": "qbittorrent",
      "name": "qbittorrent",
      "type": 1,
      "volumes": [
        {
          "container": "/config"
        },
        {
          "container": "/downloads"
        }
      ]
    },
    {
      "categories": [
        "Other"
      ],
      "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
      "env": [
        {
          "label": "INTERFACE",
          "name": "INTERFACE",
          "set": "eth0"
        },
        {
          "label": "PGID",
          "name": "PGID",
          "set": "1000"
        },
        {
          "label": "PUID",
          "name": "PUID",
          "set": "1000"
        },
        {
          "label": "TZ",
          "name": "TZ",
          "set": "America/Chicago"
        }
      ],
      "image": "linuxserver/openvpn-as:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/openvpn.png",
      "platform": "linux",
      "ports": [
        "943/tcp",
        "9443/tcp",
        "1194/udp"
      ],
      "name": "openvpn-as",
      "title": "OpenVPN Access Server",
      "type": 1,
      "volumes": [
        {
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Other"
      ],
      "description": "Server version of minetest, a free, open source alternative to minecraft.",
      "env": [
        {
          "label": "PUID",
          "name": "PUID",
          "set": "1000"
        },
        {
          "label": "PGID",
          "name": "PGID",
          "set": "1000"
        },
        {
          "label": "TZ",
          "name": "TZ",
          "set": "America/Chicago"
        }
      ],
      "image": "linuxserver/minetest:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/minetest.png",
      "platform": "linux",
      "ports": [
        "30000/udp"
      ],
      "title": "Minetest",
      "name": "minetest",
      "type": 1,
      "volumes": [
        {
          "container": "/config/.minetest"
        }
      ]
    },
    {
      "categories": [
        "Media"
      ],
      "description": "Airsonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
      "env": [
        {
          "label": "PUID",
          "name": "PUID",
          "set": "1000"
        },
        {
          "label": "PGID",
          "name": "PGID",
          "set": "1000"
        },
        {
          "label": "CONTEXT_PATH",
          "name": "CONTEXT_PATH",
          "set": "airsonic"
        },
        {
          "label": "JAVA_OPTS",
          "name": "JAVA_OPTS",
          "set": "-Xms256m -Xmx512m"
        },
        {
          "label": "TZ",
          "name": "TZ",
          "set": "America/Chicago"
        }
      ],
      "image": "linuxserver/airsonic:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/airsonic.png",
      "platform": "linux",
      "ports": [
        "4040/tcp"
      ],
      "name": "airsonic",
      "title": "Airsonic",
      "type": 1,
      "volumes": [
        {
          "container": "/music"
        },
        {
          "container": "/playlists"
        },
        {
          "container": "/podcasts"
        },
        {
          "container": "/media"
        },
        {
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Tools",
        "Web"
      ],
      "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd &lt;username&gt;",
      "env": [
        {
          "label": "EMAIL",
          "name": "EMAIL",
          "set": "-Xms256m -Xmx512m"
        },
        {
          "label": "URL",
          "name": "URL",
          "set": "-Xms256m -Xmx512m"
        },
        {
          "label": "SUBDOMAINS",
          "name": "SUBDOMAINS",
          "set": "www,"
        },
        {
          "label": "ONLY_SUBDOMAINS",
          "name": "ONLY_SUBDOMAINS",
          "set": "false"
        },
        {
          "label": "DHLEVEL",
          "name": "DHLEVEL",
          "set": "2048"
        },
        {
          "label": "PUID",
          "name": "PUID",
          "set": "1000"
        },
        {
          "label": "PGID",
          "name": "PGID",
          "set": "1000"
        },
        {
          "label": "VALIDATION",
          "name": "VALIDATION",
          "set": "http"
        },
        {
          "label": "DNSPLUGIN",
          "name": "DNSPLUGIN",
          "set": "http"
        },
        {
          "label": "TZ",
          "name": "TZ",
          "set": "America/Chicago"
        }
      ],
      "image": "linuxserver/letsencrypt:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/letsencrypt.png",
      "platform": "linux",
      "ports": [
        "80/tcp",
        "443/tcp"
      ],
      "title": "Let's Encrypt",
      "name": "letsencrypt",
      "type": 1,
      "volumes": [
        {
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other",
        "Web"
      ],
      "description": "Nextcloud is an open source, self-hosted file sync and communication app platform. Access and sync your files, contacts, calendars and communicate and collaborate across your devices. You decide what happens with your data, where it is and who can access it!",
      "env": [
        {
          "label": "PUID",
          "name": "PUID",
          "set": "1000"
        },
        {
          "label": "PGID",
          "name": "PGID",
          "set": "1000"
        },
        {
          "label": "TZ",
          "name": "TZ",
          "set": "America/Chicago"
        }
      ],
      "image": "linuxserver/nextcloud:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/nextcloud.png",
      "platform": "linux",
      "ports": [
        "443/tcp"
      ],
      "title": "Nextcloud",
      "name": "nextcloud",
      "type": 1,
      "volumes": [
        {
          "container": "/config"
        },
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Apprise-api",
      "name": "apprise-api",
      "note": "",
      "description": "Apprise-api takes advantage of Apprise through your network with a user-friendly API. * Send notifications to more then 65+ services. * An incredibly lightweight gateway to Apprise. * A production ready micro-service at your disposal. Apprise API was designed to easily fit into existing (and new) eco-systems that are looking for a simple notification solution.",
      "categories": [
        "Tools",
        "Development"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/apprise-api.png",
      "image": "linuxserver/apprise-api:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "8000:8000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/home/docker/apprise-api"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Audacity",
      "name": "audacity",
      "note": "",
      "description": "Audacity is an easy-to-use, multi-track audio editor and recorder. Developed by a group of volunteers as open source. (https://www.audacityteam.org/)",
      "platform": "linux",
      "categories": [
        "Media"
      ],
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/audacity.png",
      "image": "linuxserver/audacity:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/home/docker/audacity/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Bazarr",
      "name": "bazarr",
      "note": "",
      "description": "Bazarr is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.",
      "categories": [
        "Multimedia",
        "Downloader",
        "Arr"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/bazarr.png",
      "image": "linuxserver/bazarr:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "6767:6767/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/bazarr",
          "container": "/config"
        },
        {
          "bind": "/home/docker/bazarr/movies",
          "container": "/movies"
        },
        {
          "container": "/tv",
          "bind": "/home/docker/bazarr/tv"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Changedetection.io",
      "name": "changedetection.io",
      "note": "",
      "description": "Changedetection.io provides free, open-source web page monitoring, notification and change detection. (https://github.com/dgtlmoon/changedetection.io)",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/changedetection.io.png",
      "image": "linuxserver/changedetection.io:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "BASE_URL",
          "label": "BASE_URL",
          "default": "",
          "description": "Specify the full URL (including protocol) when running behind a reverse proxy"
        }
      ],
      "ports": [
        "5000:5000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/home/docker/changedetection.io"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Code-server",
      "name": "code-server",
      "note": "",
      "description": "Code-server is VS Code running on a remote server, accessible through the browser. - Code on your Chromebook, tablet, and laptop with a consistent dev environment. - If you have a Windows or Mac workstation, more easily develop for Linux. - Take advantage of large cloud servers to speed up tests, compilations, downloads, and more. - Preserve battery life when you're on the go. - All intensive computation runs on your server. - You're no longer running excess instances of Chrome. (https://coder.com)",
      "categories": [
        "Development"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/code-server.png",
      "image": "linuxserver/code-server:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000"

        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "PASSWORD",
          "label": "PASSWORD",
          "default": "password",
          "description": "Optional web gui password, if `PASSWORD` or `HASHED_PASSWORD` is not provided, there will be no auth."
        },
        {
          "name": "HASHED_PASSWORD",
          "label": "HASHED_PASSWORD",
          "default": "",
          "description": "Optional web gui password, overrides `PASSWORD`, instructions on how to create it is below."
        },
        {
          "name": "SUDO_PASSWORD",
          "label": "SUDO_PASSWORD",
          "default": "password",
          "description": "If this optional variable is set, user will have sudo access in the code-server terminal with the specified password."
        },
        {
          "name": "SUDO_PASSWORD_HASH",
          "label": "SUDO_PASSWORD_HASH",
          "default": "",
          "description": "Optionally set sudo password via hash (takes priority over `SUDO_PASSWORD` var). Format is `$type$salt$hashed`."
        },
        {
          "name": "PROXY_DOMAIN",
          "label": "PROXY_DOMAIN",
          "default": "code-server.mydomain",
          "description": "If this optional variable is set, this domain will be proxied for subdomain proxying. See [Documentation](https://github.com/cdr/code-server/blob/master/docs/FAQ.md#sub-domains)"
        },
        {
          "name": "DEFAULT_WORKSPACE",
          "label": "DEFAULT_WORKSPACE",
          "default": "/config/workspace",
          "description": "If this optional variable is set, code-server will open this directory by default"
        }
      ],
      "ports": [
        "8443:8443/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/code-server/config",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Dokuwiki",
      "name": "dokuwiki",
      "note": "",
      "description": "Dokuwiki is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki.  (https://www.dokuwiki.org/dokuwiki/)",
      "categories": [
        "Productivity",
        "CMS"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/dokuwiki.png",
      "image": "linuxserver/dokuwiki:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/home/docker/dokuwiki"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Doplarr",
      "name": "doplarr",
      "note": "",
      "description": "Doplarr (https://github.com/kiranshila/Doplarr) is an *arr request bot for Discord.'",
      "categories": [
        "Arr"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/doplarr.png",
      "image": "linuxserver/doplarr:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "DISCORD__TOKEN",
          "label": "DISCORD__TOKEN",
          "default": "",
          "description": "Specify your discord bot token."
        },
        {
          "name": "OVERSEERR__API",
          "label": "OVERSEERR__API",
          "default": "",
          "description": "Specify your Overseerr API key. Leave blank if using Radarr/Sonarr."
        },
        {
          "name": "OVERSEERR__URL",
          "label": "OVERSEERR__URL",
          "default": "http://localhost:5055",
          "description": "Specify your Overseerr URL. Leave blank if using Radarr/Sonarr."
        },
        {
          "name": "RADARR__API",
          "label": "RADARR__API",
          "default": "",
          "description": "Specify your Radarr API key. Leave blank if using Overseerr."
        },
        {
          "name": "RADARR__URL",
          "label": "RADARR__URL",
          "default": "http://localhost:7878",
          "description": "Specify your Radarr URL. Leave blank if using Overseerr."
        },
        {
          "name": "SONARR__API",
          "label": "SONARR__API",
          "default": "",
          "description": "Specify your Sonarr API key. Leave blank if using Overseerr."
        },
        {
          "name": "SONARR__URL",
          "label": "SONARR__URL",
          "default": "http://localhost:8989",
          "description": "Specify your Sonarr URL. Leave blank if using Overseerr."
        },
        {
          "name": "DISCORD__MAX_RESULTS",
          "label": "DISCORD__MAX_RESULTS",
          "default": "25",
          "description": "Sets the maximum size of the search results selection"
        },
        {
          "name": "DISCORD__REQUESTED_MSG_STYLE",
          "label": "DISCORD__REQUESTED_MSG_STYLE",
          "default": ":plain",
          "description": "Sets the style of the request alert message. One of `:plain` `:embed` `:none`"
        },
        {
          "name": "SONARR__QUALITY_PROFILE",
          "label": "SONARR__QUALITY_PROFILE",
          "default": "",
          "description": "The name of the quality profile to use by default for Sonarr"
        },
        {
          "name": "RADARR__QUALITY_PROFILE",
          "label": "RADARR__QUALITY_PROFILE",
          "default": "",
          "description": "The name of the quality profile to use by default for Radarr"
        },
        {
          "name": "SONARR__ROOTFOLDER",
          "label": "SONARR__ROOTFOLDER",
          "default": "",
          "description": "The root folder to use by default for Sonarr"
        },
        {
          "name": "RADARR__ROOTFOLDER",
          "label": "RADARR__ROOTFOLDER",
          "default": "",
          "description": "The root folder to use by default for Radarr"
        },
        {
          "name": "SONARR__LANGUAGE_PROFILE",
          "label": "SONARR__LANGUAGE_PROFILE",
          "default": "",
          "description": "The name of the language profile to use by default for Sonarr"
        },
        {
          "name": "OVERSEERR__DEFAULT_ID",
          "label": "OVERSEERR__DEFAULT_ID",
          "default": "",
          "description": "The Overseerr user id to use by default if there is no associated discord account for the requester"
        },
        {
          "name": "PARTIAL_SEASONS",
          "label": "PARTIAL_SEASONS",
          "default": "true",
          "description": "Sets whether users can request partial seasons."
        },
        {
          "name": "LOG_LEVEL",
          "label": "LOG_LEVEL",
          "default": ":info",
          "description": "The log level for the logging backend. This can be changed for debugging purposes. One of trace `:debug` `:info` `:warn` `:error` `:fatal` `:report`"
        },
        {
          "name": "JAVA_OPTS",
          "label": "JAVA_OPTS",
          "default": "",
          "description": "For passing additional java options."
        }
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/home/docker/doplarr"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Emby",
      "name": "emby",
      "note": "",
      "description": "Emby organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server.",
      "categories": [
        "Media Server",
        "Paid"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/emby.png",
      "image": "linuxserver/emby:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "8096:8096/tcp",
        "8920:8920/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/home/docker/emby/config"
        },
        {
          "container": "/data/tvshows",
          "bind": "/home/docker/emby/data/tvshows"
        },
        {
          "container": "/data/movies",
          "bind": "/home/docker/emby/data/movies"
        },
        {
          "container": "/opt/vc/lib",
          "bind": "/opt/vc/lib"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "EmbyStat",
      "name": "embystat",
      "note": "",
      "description": "[Embystat](https://github.com/mregni/EmbyStat) is a personal web server that can calculate all kinds of statistics from your (local) Emby server. Just install this on your server and let him calculate all kinds of fun stuff.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/embystat.png",
      "image": "linuxserver/embystat:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "6555:6555/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/home/docker/embystat"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Emulatorjs",
      "name": "emulatorjs",
      "note": "",
      "description": "Emulatorjs - In browser web based emulation portable to nearly any device for many retro consoles. A mix of emulators is used between Libretro and EmulatorJS.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/emulatorjs.png",
      "image": "linuxserver/emulatorjs:latest",
      "categories": [
        "Gaming"
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "SUBFOLDER",
          "label": "SUBFOLDER",
          "default": "/",
          "description": "Specify a subfolder for reverse proxies IE '/FOLDER/'"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "80:80/tcp",
        "4001:4001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/home/docker/emulatorjs"
        },
        {
          "container": "/data",
          "bind": "/home/docker/emulatorjs/data"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Fail2ban",
      "name": "fail2ban",
      "note": "",
      "description": "Fail2Ban is an intrusion prevention software framework, designed to prevent brute-force attacks. It is able to run on POSIX systems that have an interface to a packet-control system or firewall installed locally, such as iptables or TCP Wrapper.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/fail2ban.png",
      "image": "linuxserver/fail2ban:latest",
      "network": "host",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "VERBOSITY",
          "label": "VERBOSITY",
          "default": "-vv",
          "description": "Set the container log verbosity. Valid options are -v, -vv, -vvv, -vvvv, or leaving the value blank or not setting the variable."
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/home/docker/fail2ban/config"
        },
        {
          "container": "/var/log:ro",
          "bind": "/home/docker/fail2ban/var/log:ro"
        },
        {
          "container": "/remotelogs/airsonic:ro",
          "bind": "/home/docker/fail2ban/remotelogs/airsonic:ro"
        },
        {
          "container": "/remotelogs/apache2:ro",
          "bind": "/home/docker/fail2ban/remotelogs/apache2:ro"
        },
        {
          "container": "/remotelogs/authelia:ro",
          "bind": "/home/docker/fail2ban/remotelogs/authelia:ro"
        },
        {
          "container": "/remotelogs/emby:ro",
          "bind": "/home/docker/fail2ban/remotelogs/emby:ro"
        },
        {
          "container": "/remotelogs/filebrowser:ro",
          "bind": "/home/docker/fail2ban/remotelogs/filebrowser:ro"
        },
        {
          "container": "/remotelogs/homeassistant:ro",
          "bind": "/home/docker/fail2ban/remotelogs/homeassistant:ro"
        },
        {
          "container": "/remotelogs/lighttpd:ro",
          "bind": "/home/docker/fail2ban/remotelogs/lighttpd:ro"
        },
        {
          "container": "/remotelogs/nextcloud:ro",
          "bind": "/home/docker/fail2ban/remotelogs/nextcloud:ro"
        },
        {
          "container": "/remotelogs/nginx:ro",
          "bind": "/home/docker/fail2ban/remotelogs/nginx:ro"
        },
        {
          "container": "/remotelogs/nzbget:ro",
          "bind": "/home/docker/fail2ban/remotelogs/nzbget:ro"
        },
        {
          "container": "/remotelogs/overseerr:ro",
          "bind": "/home/docker/fail2ban/remotelogs/overseerr:ro"
        },
        {
          "container": "/remotelogs/prowlarr:ro",
          "bind": "/home/docker/fail2ban/remotelogs/prowlarr:ro"
        },
        {
          "container": "/remotelogs/radarr:ro",
          "bind": "/home/docker/fail2ban/remotelogs/radarr:ro"
        },
        {
          "container": "/remotelogs/sabnzbd:ro",
          "bind": "/home/docker/fail2ban/remotelogs/sabnzbd:ro"
        },
        {
          "container": "/remotelogs/sonarr:ro",
          "bind": "/home/docker/fail2ban/remotelogs/sonarr:ro"
        },
        {
          "container": "/remotelogs/unificontroller:ro",
          "bind": "/home/docker/fail2ban/remotelogs/unificontroller:ro"
        },
        {
          "container": "/remotelogs/vaultwarden:ro",
          "bind": "/home/docker/fail2ban/remotelogs/vaultwarden:ro"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Homeassistant",
      "name": "homeassistant",
      "note": "",
      "description": "Home Assistant Core is an open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.",
      "categories": [
        "Tools"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/homeassistant.png",
      "image": "linuxserver/homeassistant:latest",
      "network": "host",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "8123:8123/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/home/docker/homeassistant"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Jellyfin",
      "name": "jellyfin",
      "note": "",
      "description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby's 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/jellyfin.png",
      "image": "linuxserver/jellyfin:latest",
      "categories": [
        "Media Server",
        "LDAP"
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "JELLYFIN_PublishedServerUrl",
          "label": "JELLYFIN_PublishedServerUrl",
          "default": "192.168.0.5",
          "description": "Set the autodiscovery response domain or IP address."
        }
      ],
      "network": "AppBridge",
      "ports": [
        "8096:8096/tcp",
        "8920:8920/tcp",
        "7359:7359/udp",
        "1900:1900/udp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/jellyfin",
          "container": "/config"
        },
        {
          "bind": "/media/tvshows",
          "container": "/data/tvshows"
        },
        {
          "bind": "/media/movies",
          "container": "/data/movies"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Kasm",
      "name": "kasm",
      "note": "",
      "description": "Kasm workspaces is a docker container streaming platform for delivering browser-based access to desktops, applications, and web services. Kasm uses devops-enabled Containerized Desktop Infrastructure (CDI) to create on-demand, disposable, docker containers that are accessible via web browser. Example use-cases include Remote Browser Isolation (RBI), Data Loss Prevention (DLP), Desktop as a Service (DaaS), Secure Remote Access Services (RAS), and Open Source Intelligence (OSINT) collections. The rendering of the graphical-based containers is powered by the open-source project [KasmVNC](https://www.kasmweb.com/kasmvnc.html?utm_campaign=LinuxServer&utm_source=kasmvnc).",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/kasm.png",
      "image": "linuxserver/kasm:latest",
      "privileged": true,
      "env": [
        {
          "name": "KASM_PORT",
          "label": "KASM_PORT",
          "default": "443",
          "description": "Specify the port you bind to the outside for Kasm Workspaces."
        },
        {
          "name": "DOCKER_HUB_USERNAME",
          "label": "DOCKER_HUB_USERNAME",
          "default": "USER",
          "description": "Optionally specify a DockerHub Username to pull private images."
        },
        {
          "name": "DOCKER_HUB_PASSWORD",
          "label": "DOCKER_HUB_PASSWORD",
          "default": "PASS",
          "description": "Optionally specify a DockerHub password to pull private images."
        },
        {
          "name": "DOCKER_MTU",
          "label": "DOCKER_MTU",
          "default": "1500",
          "description": "Optionally specify the mtu options passed to dockerd."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/kasm/opt",
          "container": "/opt"
        },
        {
          "bind": "/home/docker/kasm/profiles",
          "container": "/profiles"
        },
        {
          "bind": "/dev/input",
          "container": "/dev/input"
        },
        {
          "bind": "/run/udev/data",
          "container": "/run/udev/data"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Libreoffice",
      "name": "libreoffice",
      "note": "",
      "description": "LibreOffice is a free and powerful office suite, and a successor to OpenOffice.org (commonly known as OpenOffice). Its clean interface and feature-rich tools help you unleash your creativity and enhance your productivity.",
      "categories": [
        "Productivity",
        "Tools"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/libreoffice.png",
      "image": "linuxserver/libreoffice:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/libreoffice/config",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Mastodon",
      "name": "mastodon",
      "note": "",
      "description": "Mastodon is a free, open-source social network server based on ActivityPub where users can follow friends and discover new ones. (https://github.com/mastodon/mastodon/)",
      "categories": [
        "Communication"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/mastodon.png",
      "image": "linuxserver/mastodon:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "LOCAL_DOMAIN",
          "label": "LOCAL_DOMAIN",
          "default": "example.com",
          "description": "This is the unique identifier of your server in the network. It cannot be safely changed later."
        },
        {
          "name": "REDIS_HOST",
          "label": "REDIS_HOST",
          "default": "redis",
          "description": "Redis server hostname"
        },
        {
          "name": "REDIS_PORT",
          "label": "REDIS_PORT",
          "default": "6379",
          "description": "Redis port"
        },
        {
          "name": "DB_HOST",
          "label": "DB_HOST",
          "default": "db",
          "description": "Postgres database hostname"
        },
        {
          "name": "DB_USER",
          "label": "DB_USER",
          "default": "mastodon",
          "description": "Postgres username"
        },
        {
          "name": "DB_NAME",
          "label": "DB_NAME",
          "default": "mastodon",
          "description": "Postgres db name"
        },
        {
          "name": "DB_PASS",
          "label": "DB_PASS",
          "default": "mastodon",
          "description": "Postgres password"
        },
        {
          "name": "DB_PORT",
          "label": "DB_PORT",
          "default": "5432",
          "description": "Portgres port"
        },
        {
          "name": "ES_ENABLED",
          "label": "ES_ENABLED",
          "default": "false",
          "description": "Enable or disable Elasticsearch (requires a separate ES instance)"
        },
        {
          "name": "SECRET_KEY_BASE",
          "label": "SECRET_KEY_BASE",
          "default": "",
          "description": "Browser session secret. Changing it will break all active browser sessions."
        },
        {
          "name": "OTP_SECRET",
          "label": "OTP_SECRET",
          "default": "",
          "description": "MFA secret. Changing it will break two-factor authentication."
        },
        {
          "name": "VAPID_PRIVATE_KEY",
          "label": "VAPID_PRIVATE_KEY",
          "default": "",
          "description": "Push notification private key. Changing it will break push notifications."
        },
        {
          "name": "VAPID_PUBLIC_KEY",
          "label": "VAPID_PUBLIC_KEY",
          "default": "",
          "description": "Push notification public key. Changing it will break push notifications."
        },
        {
          "name": "SMTP_SERVER",
          "label": "SMTP_SERVER",
          "default": "mail.example.com",
          "description": "SMTP server for email notifications"
        },
        {
          "name": "SMTP_PORT",
          "label": "SMTP_PORT",
          "default": "25",
          "description": "SMTP server port"
        },
        {
          "name": "SMTP_LOGIN",
          "label": "SMTP_LOGIN",
          "default": "",
          "description": "SMTP username"
        },
        {
          "name": "SMTP_PASSWORD",
          "label": "SMTP_PASSWORD",
          "default": "",
          "description": "SMTP password"
        },
        {
          "name": "SMTP_FROM_ADDRESS",
          "label": "SMTP_FROM_ADDRESS",
          "default": "notifications@example.com",
          "description": "From address for emails send from Mastodon"
        },
        {
          "name": "S3_ENABLED",
          "label": "S3_ENABLED",
          "default": "false",
          "description": "Enable or disable S3 storage of uploaded files"
        },
        {
          "name": "WEB_DOMAIN",
          "label": "WEB_DOMAIN",
          "default": "mastodon.example.com",
          "description": "This can be set if you want your server identifier to be different to the subdomain hosting Mastodon. See [https://docs.joinmastodon.org/admin/config/#basic](https://docs.joinmastodon.org/admin/config/#basic)"
        },
        {
          "name": "ES_HOST",
          "label": "ES_HOST",
          "default": "es",
          "description": "Elasticsearch server hostname"
        },
        {
          "name": "ES_PORT",
          "label": "ES_PORT",
          "default": "9200",
          "description": "Elasticsearch port"
        },
        {
          "name": "ES_USER",
          "label": "ES_USER",
          "default": "elastic",
          "description": "Elasticsearch username"
        },
        {
          "name": "ES_PASS",
          "label": "ES_PASS",
          "default": "elastic",
          "description": "Elasticsearch password"
        },
        {
          "name": "S3_BUCKET",
          "label": "S3_BUCKET",
          "default": "",
          "description": "S3 bucket hostname"
        },
        {
          "name": "AWS_ACCESS_KEY_ID",
          "label": "AWS_ACCESS_KEY_ID",
          "default": "",
          "description": "S3 bucket access key ID"
        },
        {
          "name": "AWS_SECRET_ACCESS_KEY",
          "label": "AWS_SECRET_ACCESS_KEY",
          "default": "",
          "description": "S3 bucket secret access key"
        },
        {
          "name": "S3_ALIAS_HOST",
          "label": "S3_ALIAS_HOST",
          "default": "",
          "description": "Alternate hostname for object fetching if you are front the S3 connections."
        },
        {
          "name": "SIDEKIQ_ONLY",
          "label": "SIDEKIQ_ONLY",
          "default": "false",
          "description": "Only run the sidekiq service in this container instance. For large scale instances that need better queue handling."
        },
        {
          "name": "SIDEKIQ_QUEUE",
          "label": "SIDEKIQ_QUEUE",
          "default": "",
          "description": "The name of the sidekiq queue to run in this container. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-queues)."
        },
        {
          "name": "SIDEKIQ_DEFAULT",
          "label": "SIDEKIQ_DEFAULT",
          "default": "false",
          "description": "Set to `true` on the main container if you're running additional sidekiq instances. It will run the `default` queue."
        },
        {
          "name": "SIDEKIQ_THREADS",
          "label": "SIDEKIQ_THREADS",
          "default": "5",
          "description": "The number of threads for sidekiq to use. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-threads)."
        },
        {
          "name": "DB_POOL",
          "label": "DB_POOL",
          "default": "5",
          "description": "The size of the DB connection pool, must be *at least* the same as `SIDEKIQ_THREADS`. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-threads)."
        }
      ],
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/home/docker/mastodon/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Phpmyadmin",
      "name": "phpmyadmin",
      "note": "",
      "description": "Phpmyadmin is a free software tool written in PHP, intended to handle the administration of MySQL over the Web. phpMyAdmin supports a wide range of operations on MySQL and MariaDB.",
      "categories": [
        "Tools"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/phpmyadmin.png",
      "image": "linuxserver/phpmyadmin:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "PMA_ARBITRARY",
          "label": "PMA_ARBITRARY",
          "default": "1",
          "description": "Set to `1` to allow you to connect to any server. Setting to `0` will only allow you to connect to specified hosts (See Application Setup)"
        },
        {
          "name": "PMA_ABSOLUTE_URI",
          "label": "PMA_ABSOLUTE_URI",
          "default": "https://phpmyadmin.example.com",
          "description": "Set the URL you will use to access the web frontend"
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/home/docker/phpmyadmin/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Pidgin",
      "name": "pidgin",
      "note": "",
      "description": "Pidgin is a chat program which lets you log into accounts on multiple chat networks simultaneously. This means that you can be chatting with friends on XMPP and sitting in an IRC channel at the same time.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/pidgin.png",
      "image": "linuxserver/pidgin:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/pidgin",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Remmina",
      "name": "remmina",
      "note": "",
      "description": "Remmina is a remote desktop client written in GTK, aiming to be useful for system administrators and travellers, who need to work with lots of remote computers in front of either large or tiny screens. Remmina supports multiple network protocols, in an integrated and consistent user interface. Currently RDP, VNC, SPICE, NX, XDMCP, SSH and EXEC are supported.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/remmina.png",
      "image": "linuxserver/remmina:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/home/docker/remmina/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Sqlitebrowser",
      "name": "sqlitebrowser",
      "note": "",
      "description": "DB Browser for SQLite is a high quality, visual, open source tool to create, design, and edit database files compatible with SQLite.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/sqlitebrowser.png",
      "image": "linuxserver/sqlitebrowser:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/home/docker/sqlitebrowser/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Swag",
      "name": "swag",
      "note": "",
      "description": "SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt\u2122) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/linuxserverio.png",
      "image": "linuxserver/swag:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "URL",
          "label": "URL",
          "default": "yourdomain.url",
          "description": "Top url you have control over (`customdomain.com` if you own it, or `customsubdomain.ddnsprovider.com` if dynamic dns)."
        },
        {
          "name": "VALIDATION",
          "label": "VALIDATION",
          "default": "http",
          "description": "Certbot validation method to use, options are `http` or `dns` (`dns` method also requires `DNSPLUGIN` variable set)."
        },
        {
          "name": "SUBDOMAINS",
          "label": "SUBDOMAINS",
          "default": "www,",
          "description": "Subdomains you'd like the cert to cover (comma separated, no spaces) ie. `www,ftp,cloud`. For a wildcard cert, set this *exactly* to `wildcard` (wildcard cert is available via `dns` validation only)"
        },
        {
          "name": "CERTPROVIDER",
          "label": "CERTPROVIDER",
          "default": "",
          "description": "Optionally define the cert provider. Set to `zerossl` for ZeroSSL certs (requires existing [ZeroSSL account](https://app.zerossl.com/signup) and the e-mail address entered in `EMAIL` env var). Otherwise defaults to Let's Encrypt."
        },
        {
          "name": "DNSPLUGIN",
          "label": "DNSPLUGIN",
          "default": "cloudflare",
          "description": "Required if `VALIDATION` is set to `dns`. Options are `acmedns`, `aliyun`, `azure`, `bunny`, `cloudflare`, `cpanel`, `desec`, `digitalocean`, `directadmin`, `dnsimple`, `dnsmadeeasy`, `dnspod`, `do`, `domeneshop`, `dreamhost`, `duckdns`, `dynu`, `freedns`, `gandi`, `gehirn`, `godaddy`, `google`, `google-domains`, `he`, `hetzner`, `infomaniak`, `inwx`, `ionos`, `linode`, `loopia`, `luadns`, `netcup`, `njalla`, `nsone`, `ovh`, `porkbun`, `rfc2136`, `route53`, `sakuracloud`, `standalone`, `transip`, and `vultr`. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under `/config/dns-conf`."
        },
        {
          "name": "PROPAGATION",
          "label": "PROPAGATION",
          "default": "",
          "description": "Optionally override (in seconds) the default propagation time for the dns plugins."
        },
        {
          "name": "EMAIL",
          "label": "EMAIL",
          "default": "",
          "description": "Optional e-mail address used for cert expiration notifications (Required for ZeroSSL)."
        },
        {
          "name": "ONLY_SUBDOMAINS",
          "label": "ONLY_SUBDOMAINS",
          "default": "false",
          "description": "If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to `true`"
        },
        {
          "name": "EXTRA_DOMAINS",
          "label": "EXTRA_DOMAINS",
          "default": "",
          "description": "Additional fully qualified domain names (comma separated, no spaces) ie. `extradomain.com,subdomain.anotherdomain.org,*.anotherdomain.org`"
        },
        {
          "name": "STAGING",
          "label": "STAGING",
          "default": "false",
          "description": "Set to `true` to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser's security test. Only to be used for testing purposes."
        }
      ],
      "ports": [
        "443:443/tcp",
        "80:80/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/swag",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Wikijs",
      "name": "wikijs",
      "note": "Setup mysql, postgres, mariadb, mssql database first, or use the default sqlite.",
      "description": "Wikijs is a modern, lightweight and powerful wiki app built on NodeJS. (https://wiki.js.org/)",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/wikijs.png",
      "image": "linuxserver/wikijs:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "DB_TYPE",
          "label": "DB_TYPE",
          "default": "sqlite",
          "description": "Type of database (mysql, postgres, mariadb, mssql or sqlite)"
        },
        {
          "name": "DB_HOST",
          "label": "DB_HOST",
          "default": "",
          "description": "Hostname or IP of the database (For PostgreSQL, MySQL, MariaDB and MSSQL)"
        },
        {
          "name": "DB_PORT",
          "label": "DB_PORT",
          "default": "",
          "description": "Port of the database (For PostgreSQL, MySQL, MariaDB and MSSQL)"
        },
        {
          "name": "DB_NAME",
          "label": "DB_NAME",
          "default": "",
          "description": "Database name (For PostgreSQL, MySQL, MariaDB and MSSQL)"
        },
        {
          "name": "DB_USER",
          "label": "DB_USER",
          "default": "",
          "description": "Username to connect to the database (For PostgreSQL, MySQL, MariaDB and MSSQL)"
        },
        {
          "name": "DB_PASS",
          "label": "DB_PASS",
          "default": "",
          "description": "Password to connect to the database (For PostgreSQL, MySQL, MariaDB and MSSQL)"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/wikijs/config",
          "container": "/config"
        },
        {
          "bind": "/home/docker/wikijs/data",
          "container": "/data"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Wireguard",
      "name": "wireguard",
      "note": "",
      "description": "WireGuard is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/wireguard.png",
      "image": "linuxserver/wireguard:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "SERVERURL",
          "label": "SERVERURL",
          "default": "wireguard.domain.com",
          "description": "External IP or domain name for docker host. Used in server mode. If set to `auto`, the container will try to determine and set the external IP automatically"
        },
        {
          "name": "SERVERPORT",
          "label": "SERVERPORT",
          "default": "51820",
          "description": "External port for docker host. Used in server mode."
        },
        {
          "name": "PEERS",
          "label": "PEERS",
          "default": "1",
          "description": "Number of peers to create confs for. Required for server mode. Can also be a list of names: `myPC,myPhone,myTablet` (alphanumeric only)"
        },
        {
          "name": "PEERDNS",
          "label": "PEERDNS",
          "default": "auto",
          "description": "DNS server set in peer/client configs (can be set as `8.8.8.8`). Used in server mode. Defaults to `auto`, which uses wireguard docker host's DNS via included CoreDNS forward."
        },
        {
          "name": "INTERNAL_SUBNET",
          "label": "INTERNAL_SUBNET",
          "default": "10.13.13.0",
          "description": "Internal subnet for the wireguard and server and peers (only change if it clashes). Used in server mode."
        },
        {
          "name": "ALLOWEDIPS",
          "label": "ALLOWEDIPS",
          "default": "0.0.0.0/0",
          "description": "The IPs/Ranges that the peers will be able to reach using the VPN connection. If not specified the default value is: '0.0.0.0/0, ::0/0' This will cause ALL traffic to route through the VPN, if you want split tunneling, set this to only the IPs you would like to use the tunnel AND the ip of the server's WG ip, such as 10.13.13.1."
        },
        {
          "name": "PERSISTENTKEEPALIVE_PEERS",
          "label": "PERSISTENTKEEPALIVE_PEERS",
          "default": "",
          "description": "Set to `all` or a list of comma separated peers (ie. `1,4,laptop`) for the wireguard server to send keepalive packets to listed peers every 25 seconds. Useful if server is accessed via domain name and has dynamic IP. Used only in server mode."
        },
        {
          "name": "LOG_CONFS",
          "label": "LOG_CONFS",
          "default": "true",
          "description": "Generated QR codes will be displayed in the docker log. Set to `false` to skip log output."
        }
      ],
      "ports": [
        "51820:51820/udp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/wireguard/config",
          "container": "/config"
        },
        {
          "bind": "/lib/modules",
          "container": "/lib/modules"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Wireshark",
      "name": "wireshark",
      "note": "",
      "description": "Wireshark is the world's foremost and widely-used network protocol analyzer. It lets you see what's happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/wireshark.png",
      "image": "linuxserver/wireshark:latest",
      "network": "host",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/wireshark",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Productivity"
      ],
      "description": "Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases",
      "env": [
        {
          "default": "/home/node/trilium-data",
          "label": "TRILIUM_DATA_DIR",
          "name": "TRILIUM_DATA_DIR"
        },
        {
          "label": "PORT",
          "name": "PORT"
        }
      ],
      "image": "zadam/trilium:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/trilium.png",
      "name": "trilium",
      "platform": "linux",
      "ports": [
        "3388:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Trilium",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/trilium-data",
          "container": "/home/node/trilium-data"
        }
      ]
    },
    {
      "categories": [
        "Dashboard"
      ],
      "description": "Helps you organize your self-hosted services by making them accessible from a single place.",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/dashy.png",
      "name": "dashy",
      "platform": "linux",
      "image": "lissy93/dashy:latest",
      "title": "Dashy",
      "restart_policy": "unless-stopped",
      "type": 3,
      "ports": [
        "4000:80/tcp"
      ]
    },
    {
      "categories": [
        "Dashboard"
      ],
      "description": "Flame is self-hosted startpage for your server. Its design is inspired (heavily) by SUI. Flame is very easy to setup and use. With built-in editors, it allows you to setup your very own application hub in no time - no file editing necessary.",
      "image": "pawelmalak/flame",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/flame.png",
      "name": "flame-dashboard",
      "platform": "linux",
      "ports": [
        "5005:5005/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Flame-Dashboard",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/flame-dashboard",
          "container": "/app/data"
        }
      ]
    },
    {
      "categories": [
        "Authentication"
      ],
      "description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
      "env": [
        {
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "authelia/authelia:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/authelia.png",
      "name": "authelia",
      "note": "Requires a configuration.yml file in order to work. Documentation is available <a href='https://docs.authelia.com/deployment/deployment-ha'>here</a>.",
      "platform": "linux",
      "ports": [
        "9091:9091/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Authelia",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/authelia",
          "container": "/etc/authelia/"
        }
      ]
    },
    {
      "categories": [
        "Tools",
        "Security"
      ],
      "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.",
      "image": "vaultwarden/server:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/vaultwarden.png",
      "name": "vaultwarden",
      "note": "This project is not associated with the Bitwarden project nor 8bit Solutions LLC.",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Vaultwarden",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/vaultwarden",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Networking",
        "Tools"
      ],
      "description": "Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC and RDP. It is called clientless because no plugins or client software are required.",
      "image": "oznu/guacamole:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/guacamole.png",
      "name": "guacamole",
      "note": "The default login will be guacadmin/guacadmin. It is common practice to add a new admin user and remove the default user for Guacamole.",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Guacamole",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/guacamole",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Dashboard"
      ],
      "description": "A dead simple static HOMepage for your servER to keep your s ervices on hand, from a simple yaml configuration file.",
      "image": "b4bz/homer:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/homer.png",
      "name": "homer",
      "note": "This container requires a yml file within the config volume. See the documentation here https://github.com/bastienwirtz/homer",
      "platform": "linux",
      "ports": [
        "8902:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Homer",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/homer/assets",
          "container": "/www/assets"
        },
        {
          "bind": "/home/docker/homer/config",
          "container": "/www/config.yml"
        }
      ]
    },
    {
      "categories": [
        "Monitoring"
      ],
      "description": "Create agents that monitor and act on your behalf.",
      "image": "huginn/huginn:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/huginn.png",
      "name": "huginn",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Huginn",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/huginn",
          "container": "/var/lib/mysql"
        }
      ]
    },
    {
      "categories": [
        "Networking",
        "Security"
      ],
      "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
      "image": "jc21/nginx-proxy-manager",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/nginx-proxy-manager.png",
      "name": "nginx-proxy-manager",
      "platform": "linux",
      "env": [
        {
          "label": "DB_SQLITE_FILE",
          "name": "DB_SQLITE_FILE",
          "default": "/data/database.sqlite"
        }
      ],
      "ports": [
        "80:80/tcp",
        "81:81/tcp",
        "443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Nginx Proxy Manager",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/nginx-proxy/data",
          "container": "/data"
        },
        {
          "bind": "/home/docker/nginx-proxy/letsencrypt",
          "container": "/etc/letsencrypt"
        }
      ]
    },
    {
      "categories": [
        "Tools"
      ],
      "description": "ownCloud is a self-hosted file sync and share server. It provides access to your data through a web interface, sync clients or WebDAV while providing a platform to view, sync and share across devices easily\u2014all under your control. ownCloud\u2019s open architecture is extensible via a simple but powerful API for applications and plugins and it works with any storage.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "TZ",
          "name": "TZ"
        },
        {
          "label": "OWNCLOUD_DOMAIN",
          "name": "OWNCLOUD_DOMAIN"
        },
        {
          "label": "DB_PASSWORD",
          "name": "DB_PASSWORD"
        },
        {
          "label": "ADMIN_USERNAME",
          "name": "ADMIN_USERNAME"
        },
        {
          "label": "ADMIN_PASSWORD",
          "name": "ADMIN_PASSWORD"
        },
        {
          "label": "PORT",
          "name": "PORT"
        }
      ],
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/owncloud.png",
      "name": "owncloud",
      "note": "The database user is owncloud and the database is owncloud.",
      "platform": "linux",
      "image": "owncloud/server:latest",
      "title": "Owncloud",
      "type": 3
    },
    {
      "categories": [
        "Networking"
      ],
      "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
      "image": "pihole/pihole:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/pihole.png",
      "name": "pihole",
      "note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53.",
      "platform": "linux",
      "ports": [
        "53:53/tcp",
        "53:53/udp",
        "67:67/udp",
        "1010:80/tcp",
        "4443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Pi-Hole",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/pihole",
          "container": "/etc/pihole"
        },
        {
          "bind": "/home/docker/pihole/DNS",
          "container": "/etc/dnsmasq.d"
        }
      ]
    },
    {
      "categories": [
        "Networking",
        "Tools"
      ],
      "description": "This container contains OpenVPN and Transmission with a configuration where Transmission is running only when OpenVPN has an active tunnel. It bundles configuration files for many popular VPN providers to make the setup easier.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "MULLVAD",
          "description": "https://haugene.github.io/docker-transmission-openvpn/supported-providers/",
          "label": "OPENVPN_PROVIDER",
          "name": "OPENVPN_PROVIDER"
        },
        {
          "default": "",
          "label": "OPENVPN_USERNAME",
          "name": "OPENVPN_USERNAME"
        },
        {
          "default": "",
          "label": "OPENVPN_PASSWORD",
          "name": "OPENVPN_PASSWORD"
        },
        {
          "default": "192.168.0.0/24",
          "label": "LOCAL_NETWORK",
          "name": "LOCAL_NETWORK"
        }
      ],
      "image": "haugene/transmission-openvpn:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/transmission.png",
      "name": "transmission-openvpn",
      "note": "List of supported providers available <a href='https://haugene.github.io/docker-transmission-openvpn/supported-providers'/>here</a>.",
      "platform": "linux",
      "ports": [
        "9091:9091/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Transmission-OpenVPN",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/downloads",
          "container": "/data"
        },
        {
          "bind": "/etc/localtime",
          "container": "/etc/localtime"
        }
      ]
    },
    {
      "categories": [
        "Tools"
      ],
      "description": "Self-hosted, ad-free, privacy-respecting Google metasearch engine.",
      "image": "benbusby/whoogle-search:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/whoogle-search.png",
      "name": "whoogle",
      "platform": "linux",
      "ports": [
        "5001:5000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Whoogle",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/whoogle",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Tools"
      ],
      "description": "Yacht is a web interface for managing docker containers with an emphasis on templating to provide 1 click deployments. Think of it like a decentralized app store for servers that anyone can make packages for.",
      "image": "selfhostedpro/yacht:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/yacht.png",
      "name": "yacht",
      "platform": "linux",
      "ports": [
        "8001:8000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Yacht",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/yacht",
          "container": "/config"
        },
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock"
        }
      ]
    },
    {
      "type": 1,
      "categories": [
        "Tools"
      ],
      "title": "Paperless-ng",
      "name": "paperless-ng",
      "note": "",
      "description": "Paperless-ng is an application by Daniel Quinn and contributors that indexes your scanned documents and allows you to easily search for documents and store metadata alongside your documents.'",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/paperless-ng.png",
      "image": "linuxserver/paperless-ng:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for GroupID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for UserID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "REDIS_URL",
          "label": "REDIS_URL",
          "default": "",
          "description": "Specify an external redis instance to use. Can optionally include a port (`redis:6379`) and/or db (`redis/foo`). If left blank or not included, will use a built-in redis instance. If changed after initial setup will also require manual modification of /config/settings.py"
        }
      ],
      "ports": [
        "8000:8000/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/paperless-ng/config",
          "container": "/config"
        },
        {
          "container": "/data",
          "bind": "/home/docker/paperless-ng/data"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Downloaders",
        "Multimedia"
      ],
      "description": "YoutubeDL-Material is a Material Design frontend for youtube-dl. It's coded using Angular 9 for the frontend, and Node.js on the backend.",
      "image": "tzahi12345/youtubedl-material:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/youtubedl.png",
      "name": "youtubedl-material",
      "platform": "linux",
      "ports": [
        "17442:17442/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "YouTubeDL-Material",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/ytdlm",
          "container": "/app/appdata"
        },
        {
          "bind": "/home/docker/ytdlm/video",
          "container": "/app/video"
        },
        {
          "bind": "/home/docker/ytdlm/subscriptions",
          "container": "/app/subscriptions"
        },
        {
          "bind": "/home/docker/ytdlm/users",
          "container": "/app/users"
        },
        {
          "bind": "/home/docker/ytdlm/audio",
          "container": "/app/audio"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools",
        "Gaming"
      ],
      "description": "C# application with primary purpose of farming Steam cards from multiple accounts simultaneously.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "justarchi/archisteamfarm:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/archisteamfarm.png",
      "name": "archisteamfarm",
      "platform": "linux",
      "ports": [
        "1242:1242/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "ArchiSteamFarm",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/archiSteamFarm/config",
          "container": "/app/config"
        },
        {
          "bind": "/home/docker/archiSteamFarm/plugins",
          "container": "/app/plugins"
        },
        {
          "bind": "/home/docker/archiSteamFarm/logs",
          "container": "/app/logs"
        }
      ],
      "note": ""
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "ArchiveBox is a powerful, self-hosted internet archiving solution to collect, save, and view sites you want to preserve offline.",
      "env": [
        {
          "default": "*",
          "label": "ALLOWED_HOSTS",
          "name": "ALLOWED_HOSTS"
        },
        {
          "default": "750m",
          "label": "MEDIA_MAX_SIZE",
          "name": "MEDIA_MAX_SIZE"
        },
        {
          "default": "true",
          "label": "PUBLIC_INDEX",
          "name": "PUBLIC_INDEX"
        },
        {
          "default": "true",
          "label": "PUBLIC_SNAPSHOTS",
          "name": "PUBLIC_SNAPSHOTS"
        },
        {
          "default": "false",
          "label": "PUBLIC_ADD_VIEW",
          "name": "PUBLIC_ADD_VIEW"
        }
      ],
      "image": "archivebox/archivebox:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/archivebox.png",
      "name": "archivebox",
      "note": "",
      "platform": "linux",
      "ports": [
        "8002:8000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Archivebox",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/archivebox",
          "container": "/data"
        }
      ]
    },
    {
      "categories": [
        "Networking"
      ],
      "description": "Caddy is a powerful, enterprise-ready, open source web server with automatic HTTPS written in Go. ",
      "image": "caddy:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/caddy.png",
      "name": "caddy",
      "note": "Create firewall rule first: 'sudo ufw allow http' and 'sudo ufw allow https'. Add port 2019/tcp for admin endpoint",
      "platform": "linux",
      "network": "host",
      "ports": [
        "80:80/tcp",
        "443:443/tcp",
        "443:443/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Caddy",
      "type": 1,
      "volumes": [
        {
          "bind": "caddy",
          "container": "/data"
        },
        {
          "bind": "caddy",
          "container": "/config"
        },
        {
          "bind": "caddyfiles",
          "container": "/etc/caddy"
        }
      ]
    },
    {
      "categories": [
        "Security",
        "Tools"
      ],
      "description": "ClamAV is an open source antivirus engine for detecting trojans, viruses, malware & other malicious threats.",
      "image": "clamav/clamav",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/clamav.png",
      "name": "clamav",
      "platform": "linux",
      "ports": [
        "3310:3310/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "ClamAV",
      "type": 1,
      "volumes": [
        {
          "bind": "/etc/timezone",
          "container": "/etc/timezone:ro"
        },
        {
          "bind": "/home/docker/clamav/virus_definitions",
          "container": "/var/lib/clamav"
        },
        {
          "bind": "/home/docker",
          "container": "/scandir"
        }
      ],
      "note": ""
    },
    {
      "categories": [
        "Arr",
        "Tools"
      ],
      "description": "FlareSolverr is a proxy server to bypass Cloudflare and DDoS-GUARD protection.",
      "env": [
        {
          "default": "info",
          "label": "LOG_LEVEL",
          "name": "LOG_LEVEL"
        },
        {
          "default": "false",
          "label": "LOG_HTML",
          "name": "LOG_HTML"
        },
        {
          "default": "none",
          "label": "CAPTCHA_SOLVER",
          "name": "CAPTCHA_SOLVER"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "ghcr.io/flaresolverr/flaresolverr:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/flaresolverr.png",
      "name": "flaresolverr",
      "platform": "linux",
      "ports": [
        "8191:8191/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "FlareSolverr",
      "type": 1,
      "note": ""
    },
    {
      "categories": [
        "Gaming",
        "Paid"
      ],
      "description": "This docker image provides the FoundryVTT system for hosting your own virtual table top games.",
      "env": [
        {
          "default": "John",
          "label": "Foundry Account Name",
          "name": "FOUNDRY_USERNAME"
        },
        {
          "default": "password",
          "label": "Foundry Password",
          "name": "FOUNDRY_PASSWORD"
        },
        {
          "default": "changeme",
          "label": "Instance Admin Password",
          "name": "FOUNDRY_ADMIN_KEY"
        },
        {
          "default": "true",
          "label": "CONTAINER_PRESERVE_CONFIG",
          "name": "CONTAINER_PRESERVE_CONFIG"
        }
      ],
      "image": "felddy/foundryvtt:release",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/foundryvtt.png",
      "name": "foundryVTT",
      "platform": "linux",
      "ports": [
        "30000:30000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "FoundryVTT Server",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/foundryvtt",
          "container": "/data"
        }
      ],
      "note": ""
    },
    {
      "categories": [
        "CMS"
      ],
      "description": "Ghost is a free and open source blogging platform written in JavaScript and distributed under the MIT License, designed to simplify the process of online publishing for individual bloggers as well as online publications.",
      "env": [
        {
          "default": "development",
          "label": "NODE_ENV",
          "name": "NODE_ENV"
        },
        {
          "default": "http://localhost/",
          "label": "url",
          "name": "url"
        }
      ],
      "image": "ghost:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/ghost.png",
      "name": "ghost",
      "platform": "linux",
      "ports": [
        "2368:2368/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Ghost",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/ghost",
          "container": "/var/lib/ghost/content"
        }
      ],
      "note": ""
    },
    {
      "categories": [
        "Dashboard",
        "Web",
        "Other"
      ],
      "description": "Homarr is a simple and lightweight homepage for your server, that helps you easily access all of your services in one place.",
      "note": "",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "ghcr.io/ajnart/homarr:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/homarr.png",
      "name": "homarr-secured",
      "platform": "linux",
      "ports": [
        "7575:7575/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Homarr-Secured",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/homarr/configs",
          "container": "/app/data/configs"
        },
        {
          "bind": "/home/docker/homarr/icons",
          "container": "/app/public/icons"
        }
      ]
    },
    {
      "categories": [
        "Tools"
      ],
      "description": "Homebridge allows you to integrate with smart home devices that do not natively support HomeKit. There are over 2,000 Homebridge plugins supporting thousands of different smart accessories.",
      "env": [
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1",
          "label": "HOMEBRIDGE_CONFIG_UI",
          "name": "HOMEBRIDGE_CONFIG_UI"
        },
        {
          "default": "8581",
          "label": "HOMEBRIDGE_CONFIG_UI_PORT",
          "name": "HOMEBRIDGE_CONFIG_UI_PORT"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "homebridge/homebridge:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homebridge.png",
      "name": "homebridge",
      "network": "host",
      "note": "",
      "platform": "linux",
      "privileged": true,
      "restart_policy": "unless-stopped",
      "title": "Homebridge",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/homebridge",
          "container": "/homebridge"
        }
      ]
    },
    {
      "categories": [
        "Downloaders",
        "Tools"
      ],
      "description": "JDownloader 2 is a free, open-source download management tool with a huge community of developers that makes downloading as easy and fast as it should be. Users can start, stop or pause downloads, set bandwith limitations, auto-extract archives and much more. It's an easy-to-extend framework that can save hours of your valuable time every day!. <a href='https://hub.docker.com/r/jlesage/jdownloader-2'>Docker Hub</a>",
      "env": [
        {
          "default": "",
          "label": "MYJD_DEVICE_NAME",
          "name": "MYJD_DEVICE_NAME"
        },
        {
          "default": "",
          "label": "MYJD_USER",
          "name": "MYJD_USER"
        },
        {
          "default": "",
          "label": "MYJD_PASSWORD",
          "name": "MYJD_PASSWORD"
        }
      ],
      "image": "jlesage/jdownloader-2",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/jdownloader.png",
      "name": "jdownloader",
      "platform": "linux",
      "ports": [
        "5800:5800/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "JDownloader",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/jdownloader",
          "container": "/opt/JDownloader/app/cfg"
        },
        {
          "bind": "/media",
          "container": "/opt/JDownloader/Downloads"
        }
      ],
      "note": ""
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "An alternative private front-end to Reddit",
      "image": "libreddit/libreddit:armv7",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/libreddit.png",
      "name": "libreddit",
      "platform": "linux",
      "ports": [
        "8088:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Libreddit",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/libreddit",
          "container": "/config"
        }
      ],
      "note": ""
    },
    {
      "categories": [
        "Authentication",
        "LDAP"
      ],
      "description": "This project is a lightweight authentication server that provides an opinionated, simplified LDAP interface for authentication.",
      "env": [
        {
          "default": "somesecretjwt",
          "label": "LLDAP_JWT_SECRET",
          "name": "LLDAP_JWT_SECRET"
        },
        {
          "default": "someadminpassword",
          "label": "LLDAP_LDAP_USER_PASS",
          "name": "LLDAP_LDAP_USER_PASS"
        },
        {
          "default": "dc=example,dc=com",
          "label": "LLDAP_LDAP_BASE_DN",
          "name": "LLDAP_LDAP_BASE_DN"
        }
      ],
      "image": "nitnelave/lldap:stable-debian",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/lldap.png",
      "name": "lldap",
      "platform": "linux",
      "ports": [
        "3890:3890/tcp",
        "17170:17170/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "LLDAP",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/lldap",
          "container": "/data"
        }
      ],
      "note": ""
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "A self-hosted recipe manager and meal planner",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "2",
          "label": "WEB_CONCURRENCY",
          "name": "WEB_CONCURRENCY"
        },
        {
          "default": "8",
          "label": "MAX_WORKERS",
          "name": "MAX_WORKERS"
        },
        {
          "default": "true",
          "label": "RECIPE_PUBLIC",
          "name": "RECIPE_PUBLIC"
        },
        {
          "default": "true",
          "label": "RECIPE_SHOW_NUTRITION",
          "name": "RECIPE_SHOW_NUTRITION"
        },
        {
          "default": "true",
          "label": "RECIPE_SHOW_ASSETS",
          "name": "RECIPE_SHOW_ASSETS"
        },
        {
          "default": "true",
          "label": "RECIPE_LANDSCAPE_VIEW",
          "name": "RECIPE_LANDSCAPE_VIEW"
        },
        {
          "default": "false",
          "label": "RECIPE_DISABLE_COMMENTS",
          "name": "RECIPE_DISABLE_COMMENTS"
        },
        {
          "default": "false",
          "label": "RECIPE_DISABLE_AMOUNT",
          "name": "RECIPE_DISABLE_AMOUNT"
        }
      ],
      "image": "hkotel/mealie:v0.4.3",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/mealie.png",
      "name": "mealie",
      "note": "",
      "platform": "linux",
      "ports": [
        "9925:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Mealie",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/mealie",
          "container": "/app/data"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools",
        "Gaming"
      ],
      "description": "This docker image provides a Minecraft Server that will automatically download the latest stable version at startup. You can also run/upgrade to any specific version or the latest snapshot. See the Versions section below for more information.",
      "env": [
        {
          "default": "TRUE",
          "label": "EULA",
          "name": "EULA"
        }
      ],
      "image": "itzg/minecraft-server:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/minecraft.png",
      "name": "minecraft",
      "platform": "linux",
      "ports": [
        "25565:25565/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Minecraft Server",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/minecraft-data",
          "container": "/data"
        }
      ],
      "note": ""
    },
    {
      "categories": [
        "Networking",
        "Monitoring"
      ],
      "description": "Troubleshoot slowdowns and anomalies in your infrastructure with thousands of per-second metrics, meaningful visualizations, and insightful health alarms with zero configuration.",
      "env": [
        {
          "default": "1000",
          "label": "DOCKER_USR",
          "name": "DOCKER_USR"
        },
        {
          "default": "1000",
          "label": "DOCKER_GRP",
          "name": "DOCKER_GRP"
        }
      ],
      "image": "netdata/netdata:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/netdata.png",
      "name": "netdata",
      "note": "",
      "platform": "linux",
      "ports": [
        "19999:19999/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Netdata",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/netdata/netdataconfig",
          "container": "/etc/netdata"
        },
        {
          "bind": "/home/docker/netdata/netdatalib",
          "container": "/var/lib/netdata"
        },
        {
          "bind": "/etc/passwd",
          "container": "/host/etc/passwd:ro"
        },
        {
          "bind": "/etc/group",
          "container": "/host/etc/group:ro"
        },
        {
          "bind": "/proc",
          "container": "/host/proc:ro"
        },
        {
          "bind": "/sys",
          "container": "/host/sys:ro"
        },
        {
          "bind": "/etc/os-release",
          "container": "/host/etc/os-release:ro"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Organizr allows you to setup Tabs that will be loaded all in one webpage. You can then work on your server with ease.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "organizr/organizr:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/organizr.png",
      "name": "organizr-v2",
      "platform": "linux",
      "ports": [
        "7171:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Organizr v2",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/organizr",
          "container": "/config"
        }
      ],
      "note": ""
    },
    {
      "type": 1,
      "name": "postgres",
      "title": "PostgreSQL",
      "note": "",
      "description": "PostgreSQL, also known as Postgres, is a free and open-source relational database management system emphasizing extensibility and SQL compliance. It was originally named POSTGRES, referring to its origins as a successor to the Ingres database developed at the University of California, Berkeley. <a href='https://www.postgresql.org/' target='_blank'>Website</a>. <a href='https://hub.docker.com/_/postgres' target='_blank'>Docker Hub</a>",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/postgres.png",
      "image": "postgres",
      "categories": [
        "Database"
      ],
      "volumes": [
        {
          "bind": "/home/docker/postgres",
          "container": "/var/lib/postgresql/data",
          "mode": "rw"
        }
      ],
      "ports" : [
        {
          "host": "5432",
          "container": "5432"
        }
      ],
      "env": [
        {
          "name": "POSTGRES_USER",
          "label": "User",
          "description": "Database user",
          "type": "text",
          "default": "heimdall"
        },
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Password",
          "description": "Database password",
          "type": "password",
          "default": "password"
        },
        {
          "name": "POSTGRES_DB",
          "label": "Database",
          "description": "Database name",
          "type": "text",
          "default": "heimdall"
        }
      ]
    },
    {
      "categories": [
        "Downloaders"
      ],
      "description": "A docker image with qBittorrent and the Flood UI, also optional WireGuard VPN support. See the official documentation for WireGuard VPN support at https://hotio.dev/containers/qflood/",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "002",
          "label": "UMASK",
          "name": "UMASK"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "false",
          "label": "FLOOD_AUTH",
          "name": "FLOOD_AUTH"
        }
      ],
      "image": "hotio/qflood:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/qflood.png",
      "name": "qflood",
      "note": "",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "qFlood",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/qflood",
          "container": "/config"
        },
        {
          "bind": "/home/docker/Downloads",
          "container": "/app/qBittorrent/downloads"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "A remote desktop software, the open source TeamViewer alternative, works out of the box, no configuration required. You have full control of your data, with no concerns about security.",
      "env": [
        {
          "default": "rustdesk.example.com:21117",
          "description": "Use your domain with the default 21117 port",
          "label": "RELAY",
          "name": "RELAY"
        },
        {
          "default": "1",
          "description": "if set to \"1\" unencrypted connection will not be accepted",
          "label": "ENCRYPTED_ONLY",
          "name": "ENCRYPTED_ONLY"
        }
      ],
      "image": "rustdesk/rustdesk-server-s6:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/rustdesk.png",
      "name": "rustdesk",
      "note": "",
      "platform": "linux",
      "ports": [
        "21115:21115/tcp",
        "21116:21116/tcp",
        "21116:21116/udp",
        "21117:21117/tcp",
        "21118:21118/tcp",
        "21119:21119/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "RustDesk",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/rustdesk",
          "container": "/data"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Open-Source Privacy-respecting metasearch engine",
      "env": [
        {
          "default": "http://localhost:9017",
          "label": "BASE_URL",
          "name": "BASE_URL"
        },
        {
          "default": "my-instance",
          "label": "INSTANCE_NAME",
          "name": "INSTANCE_NAME"
        }
      ],
      "image": "searxng/searxng:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/searx.png",
      "name": "searxng",
      "platform": "linux",
      "ports": [
        "9017:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "SearXNG",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/searxng",
          "container": "/etc/searxng"
        }
      ],
      "note": ""
    },
    {
      "type": 1,
      "name": "surrealdb",
      "title": "SurrealDB",
      "note": "",
      "description": "SurrealDB acts as both a database and a modern, realtime, collaborative API backend layer. SurrealDB can run as a single server or in a highly-available, highly-scalable distributed mode - with support for SQL querying from client devices, GraphQL, ACID transactions, WebSocket connections, structured and unstructured data, graph querying, full-text indexing, geospatial querying, and row-by-row permissions-based access. <a href='https://surrealdb.co/' target='_blank'>Website</a>. <a href='https://hub.docker.com/r/surrealdb/surrealdb' target='_blank'>Docker Hub</a>",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/surrealdb.png",
      "image": "surrealdb/surrealdb",
      "categories": [
        "Database"
      ],
      "volumes": [
        {
          "bind": "/home/docker/surrealdb",
          "container": "/data",
          "mode": "rw"
        }
      ],
      "ports" : [
        {
          "host": "3306",
          "container": "3306"
        }
      ],
      "env": [
        {
          "name": "SURREALDB_ADMIN_PASSWORD",
          "label": "Admin Password",
          "description": "Admin password for SurrealDB",
          "type": "password",
          "default": "password"
        },
        {
          "name": "SURREALDB_ADMIN_EMAIL",
          "label": "Admin Email",
          "description": "Admin email for SurrealDB",
          "type": "text",
          "default": "root"

        }
      ]
    },
    {
      "categories": [
        "Networking",
        "Security"
      ],
      "description": "Traefik is an open-source Edge Router that makes publishing your services a fun and easy experience. It receives requests on behalf of your system and finds out which components are responsible for handling them. ",
      "image": "traefik:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/traefik.png",
      "name": "traefik",
      "note": "",
      "platform": "linux",
      "ports": [
        "80:80/tcp",
        "443:443/tcp",
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "command": "--api.insecure=true --providers.docker",
      "title": "Traefik",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/traefik/traefik.yml",
          "container": "/traefik.yml"
        },
        {
          "bind": "/home/docker/traefik/config.yml",
          "container": "/config.yml"
        },
        {
          "bind": "/home/docker/traefik/acme.json",
          "container": "/acme.json"
        },
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock"
        }
      ]
    },
    {
      "categories": [
        "Tools",
        "Multimedia"
      ],
      "description": "Unmanic is a simple tool for optimising your file library. You can use it to convert your files into a single, uniform format, manage file movements based on timestamps, or execute custom commands against a file based on its file size.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "josh5/unmanic:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/unmanic.png",
      "name": "unmanic",
      "platform": "linux",
      "ports": [
        "8888:8888/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Unmanic",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/unmanic",
          "container": "/config"
        },
        {
          "bind": "/media",
          "container": "/library"
        },
        {
          "bind": "/var/tmp/unmanic",
          "container": "/tmp/unmanic"
        }
      ],
      "note": ""
    },
    {
      "categories": [
        "Networking"
      ],
      "description": "Quickly and easily configure Wireguard through a web browser.",
      "env": [
        {
          "default": "example.domain.com",
          "description": "Set here your DDNS domain",
          "label": "WG_HOST",
          "name": "WG_HOST"
        },
        {
          "default": "ENTER AN ADMIN PASSWORD",
          "description": "Leave blank to access WebUI without loggin",
          "label": "PASSWORD",
          "name": "PASSWORD"
        },
        {
          "default": "51820",
          "label": "WG_PORT",
          "name": "WG_PORT"
        },
        {
          "default": "1.1.1.1",
          "label": "WG_DEFAULT_DNS",
          "name": "WG_DEFAULT_DNS"
        },
        {
          "default": "10.8.0.x",
          "label": "WG_DEFAULT_ADDRESS",
          "name": "WG_DEFAULT_ADDRESS"
        },
        {
          "default": "0.0.0.0/0, ::/0",
          "label": "WG_ALLOWED_IPS",
          "name": "WG_ALLOWED_IPS"
        }
      ],
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/wireguard.png",
      "name": "wg-easy",
      "platform": "linux",
      "image": "weejewel/wg-easy",
      "title": "WireGuard-Easy",
      "type": 3,
      "note": ""
    },
    {
      "categories": [
        "CMS"
      ],
      "description": "WordPress is a web content management system. It was originally created as a tool to publish blogs but has evolved to support publishing other web content, including more traditional websites, mailing lists and Internet forum, media galleries, membership sites, learning management systems and online stores.",
      "env": [
        {
          "default": "db",
          "label": "Port or host of database server",
          "name": "WORDPRESS_DB_HOST"
        },
        {
          "default": "exampleuser",
          "label": "Database user name",
          "name": "WORDPRESS_DB_USER"
        },
        {
          "default": "examplepass",
          "label": "Database password for user",
          "name": "WORDPRESS_DB_PASSWORD"
        },
        {
          "default": "exampledb",
          "label": "Database name",
          "name": "WORDPRESS_DB_NAME"
        }
      ],
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/wordpress.png",
      "note": "Create a mysql or mariadb database for the container first.",
      "platform": "linux",
      "image": "wordpress:latest",
      "title": "Wordpress",
      "name": "wordpress",
      "type": 3,
      "restart_policy": "unless-stopped",
      "ports": [
        "8080:80/tcp"
      ],
      "network": "AppBridge",
      "volumes": [
        {
          "bind": "/home/docker/wordpress",
          "container": "/var/www/html"
        }
      ]
    },
    {
      "categories": [
        "Gaming"
      ],
      "description": "McMyAdmin 2 is the leading web control panel and administration console for Minecraft servers.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "linuxserver/mcmyadmin2:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/mcmyadmin2.png",
      "name": "mcmyadmin2",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp",
        "25565:25565/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "McMyAdmin 2",
      "type": 1,
      "volumes": [
        {
          "container": "/minecraft"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "A one-of-a-kind resume builder that's not out to get your data. Completely secure, customizable, portable, open-source and free forever.",
      "image": "amruthpillai/reactive-resume:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/reactiveresume.png",
      "name": "reactive-resume",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Reactive-Resume",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/reactiveresume",
          "container": "/usr/src/app"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "VPN",
        "Tools"
      ],
      "description": "This container contains OpenVPN and Deluge with a configuration where Deluge is running only when OpenVPN has an active tunnel. It bundles configuration files for many popular VPN providers to make the setup easier.",
      "env": [
        {
          "default": "1001",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1001",
          "label": "PGID",
          "name": "PUID"
        },
        {
          "default": "MULLVAD",
          "description": "see https://github.com/sgtsquiggs/docker-deluge-openvpn",
          "label": "OPENVPN_PROVIDER",
          "name": "OPENVPN_PROVIDER"
        },
        {
          "label": "OPENVPN_USERNAME",
          "name": "OPENVPN_USERNAME"
        },
        {
          "label": "OPENVPN_PASSWORD",
          "name": "OPENVPN_PASSWORD"
        }
      ],
      "image": "sgtsquiggs/deluge-openvpn:latest",
      "name": "deluge-openvpn",
      "logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/deluge.png",
      "platform": "linux",
      "ports": [
        "8112:8112/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Deluge OpenVPN",
      "type": 1,
      "volumes": [
        {
          "bind": "/etc/localtime",
          "container": "/etc/localtime"
        },
        {
          "bind": "/home/docker/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/home/docker/delugeopenvpn/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Multimedia"
      ],
      "note": "",
      "description": "Tdarr is a popular conditional transcoding application for processing large (or small) media libraries. The application comes in the form of a click-to-run web-app, which you run on your own device and access through a web browser.",
      "logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/tdarr.png",
      "name": "tdarr",
      "platform": "linux",
      "image": "ghcr.io/haveagitgat/tdarr",
      "title": "Tdarr",
      "type": 3,
      "volumes": [
        {
          "bind": "/home/docker/tdarr/configs",
          "container": "/app/configs"
        },
        {
          "bind": "/home/docker/Downloads",
          "container": "/downloads"
        }
      ],
      "ports": [
        "8265:8265/tcp"
      ],
      "restart_policy": "unless-stopped",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ]
    },
    {
      "categories": [
        "Finance"
      ],
      "description": "Cryptofolio is an open-source, and self-hosted solution for tracking your cryptocurrency holdings. It features a web interface, an Android mobile app, and a cross-platform desktop application for Windows, macOS, and Linux.",
      "image": "xtrendence/cryptofolio:latest",
      "logo": "https://i.imgur.com/5v8lzea.png",
      "name": "cryptofolio",
      "platform": "linux",
      "ports": [
        "7280:80/tcp"
      ],
      "restart_policy": "always",
      "title": "Cryptofolio",
      "type": 1
    },
    {
      "categories": [
        "Networking"
      ],
      "description": "An easy to use Status Page for your websites and applications. Statping will automatically fetch the application and render a beautiful status page with tons of features for you to build an even better status page.",
      "image": "statping/statping:latest",
      "logo": "https://raw.githubusercontent.com/xneo1/portainer_templates/master/Images/statping.png",
      "name": "statping",
      "platform": "linux",
      "ports": [
        "4040:8080/tcp"
      ],
      "restart_policy": "always",
      "title": "Statping",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/statping",
          "container": "/app"
        }
      ]
    },
    {
      "type": 1,
      "name": "influxdb",
      "title": "InfluxDB",
      "note": "",
      "description": "InfluxDB is an open source time series database developed by InfluxData. It is written in Go and optimized for fast, high-availability storage and retrieval of time series data in fields such as operations monitoring, application metrics, Internet of Things sensor data, and real-time analytics. <a href='https://www.influxdata.com/' target='_blank'>Website</a>. <a href='https://hub.docker.com/_/influxdb' target='_blank'>Docker Hub</a>",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/influxdb.png",
      "image": "influxdb",
      "categories": [
        "Database"
      ],
      "volumes": [
        {
          "bind": "/home/docker/influxdb",
          "container": "/var/lib/influxdb",
          "mode": "rw"
        }
      ],
      "ports" : [
        {
          "host": "8086",
          "container": "8086"
        }
      ],
      "env": [
        {
          "name": "INFLUXDB_ADMIN_USER",
          "label": "Admin User",
          "description": "Admin user for InfluxDB",
          "type": "text",
          "default": "admin"
        },
        {
          "name": "INFLUXDB_ADMIN_PASSWORD",
          "label": "Admin Password",
          "description": "Admin password for InfluxDB",
          "type": "password",
          "default": "password"
        },
        {
          "name": "INFLUXDB_DB",
          "label": "Database",
          "description": "Database name",
          "type": "text",
          "default": "mydb"
        }
      ]
    },
    {
      "categories": [
        "Media Server",
        "LDAP"
      ],
      "description": "Tubearchivist is your self hosted YouTube media server",
      "note": "Requires a Redis and Elasticsearch database. Tube Archivist needs around 2GB of available memory for a small testing setup and around 4GB of available memory for a mid to large sized installation. Minimal with dual core with 4 threads, better quad core plus.",
      "logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/tube-archivist.png",
      "name": "tubearchivist",
      "platform": "linux",
      "image": "bbilly1/tubearchivist",
      "title": "Tubearchivist",
      "type": 3,
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "bind": "/media/youtube",
          "container": "/youtube"
        }
      ],
      "env": [
        {
          "name": "INFLUXDB_ADMIN_USER",
          "label": "Admin User",
          "description": "Admin user for InfluxDB",
          "type": "text",
          "default": "admin"
        },
        {
          "name": "INFLUXDB_ADMIN_PASSWORD",
          "label": "Admin Password",
          "description": "Admin password for InfluxDB",
          "type": "password",
          "default": "password"
        },
        {
          "name": "INFLUXDB_DB",
          "label": "Database",
          "description": "Database name",
          "type": "text",
          "default": "mydb"
        }
      ]
    },
    {
      "categories": [
        "Finance"
      ],
      "description": "Actual is a local-first personal finance tool. It is 100% free and open-source. It has a synchronization element so that all your changes can move between devices without any heavy lifting.",
      "logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/actual.png",
      "name": "actual-server",
      "platform": "linux",
      "image": "actualbudget/actual-server:latest",
      "restart_policy": "unless-stopped",
      "title": "Actual-Server",
      "ports": [
        "5006:5006/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/actual",
          "container": "/data"
        }
      ],
      "type": 3
    },
    {
      "categories": [
        "Development"
      ],
      "description": "Appsmith (www.appsmith.com) is the first open-source low code tool that helps developers build dashboards and admin panels very quickly.",
      "logo": "https://cdn-images.himalayas.app/vr60veq4neiptamhqm6qxwi3toi3",
      "name": "appsmith",
      "platform": "linux",
      "image": "appsmith/appsmith-ce",
      "title": "Appsmith",
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "bind": "/home/docker/appsmith",
          "container": "/appsmith-stacks"
        }
      ],
      "type": 3
    },
    {
      "categories": [
        "Productivity"
      ],
      "note": "Requires a MySQL database. Create a database first.",
      "description": "Leantime is an open source project management system for small teams and startups written in PHP, Javascript using MySQL. https://leantime.io",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/leantime.png",
      "name": "leantime",
      "platform": "linux",
      "image": "leantime/leantime:latest",
      "title": "Leantime",
      "type": 3,
      "ports": [
        "80:80/tcp"
      ],
      "env": [
        {
          "name": "MYSQL_HOST",
          "label": "Database Host",
          "description": "Database host",
          "type": "text",
          "default": "mysql_leantime"
        },
        {
          "name": "MYSQL_USER",
          "label": "Database User",
          "description": "Database user",
          "type": "text",
          "default": "leantime_user"
        },
        {
          "name": "MYSQL_PASSWORD",
          "label": "Database Password",
          "description": "Database password",
          "type": "password",
          "default": "choose.a.long.random.password"
        },
        {
          "name": "MYSQL_DATABASE",
          "label": "Database Name",
          "description": "Database name",
          "type": "text",
          "default": "leantime_database"
        }
      ]
    },
    {
      "categories": [
        "Other"
      ],
      "description": "Jellyseerr is a free and open source software application for managing requests for your media library. It is a a fork of Overseerr built to bring support for Jellyfin & Emby media servers!. <a href='https://github.com/Fallenbagel/jellyseerr/'>Github</a>",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/jellyseerr.png",
      "name": "jellyseerr",
      "note": "For Emby : add the environment variable JELLYFIN_TYPE=emby . (this will allow you to use the play button)",
      "platform": "linux",
      "image": "fallenbagel/jellyseerr:latest",
      "title": "Jellyseerr",
      "type": 3,
      "volumes": [
        {
          "bind": "/home/docker/jellyseerr",
          "container": "/app/config"
        }
      ],
      "ports": [
        "5055:5055/tcp"
      ]
    },
    {
      "categories": [
        "Dashboard"
      ],
      "description": "Dashdot is a modern server dashboard, running on the latest tech, designed with glassmorphism in mind. It is intended to be used for smaller VPS and private servers.",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/dashdot.png",
      "name": "dashdot",
      "platform": "linux",
      "image": "mauricenino/dashdot",
      "title": "Dashdot",
      "type": 3,
      "ports": [
        "80:3001/tcp"
      ],
      "volumes": [
        {
          "bind": "/",
          "container": "/mnt/host:ro"
        }
      ],
      "privileged": true
    },
    {
      "categories": [
        "Tools"
      ],
      "description": "AdGuard Home is a network-wide software for blocking ads & tracking. After you set it up, it\u2019ll cover ALL your home devices, and you don\u2019t need any client-side software for that. With the rise of Internet-Of-Things and connected devices, it becomes more and more important to be able to control your whole network.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "CONTEXT_PATH",
          "name": "CONTEXT_PATH",
          "set": "adguard home"
        }
      ],
      "note": "DNS-over-HTTPS: [80:80/TCP] [443:443/TCP] [443:443/UDP] [3000:3000/TCP] [DEFAULT]. DNS: [53:53/TCP] [53:53/UDP]. Admin Panel: [3000:3000/TCP]. DHCP: [67:67/UDP] [68:68/TCP] [68:68/UDP]. DNS-over-TLS: [853:853/TCP]. DNS-over-QUIC: [784:784/UDP] [853:853/UDP] [8853:8853/UDP]. DNSCrypt: [5443:5443/TCP] [5443:5443/UDP]",
      "image": "adguard/adguardhome:latest",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/Dashboard-Icons/main/png/adguard.png",
      "name": "adguard",
      "platform": "linux",
      "ports": [
        "53:53/tcp",
        "53:53/udp",
        "67:67/udp",
        "68:68/tcp",
        "68:68/udp",
        "80:80/tcp",
        "443:443/tcp",
        "853:853/tcp",
        "3000:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Adguard",
      "type": 1,
      "volumes": [
        {
          "bind": "/home/docker/Files/AppData/Adguard/Workdir",
          "container": "/opt/adguardhome/work"
        },
        {
          "bind": "/home/docker/Files/AppData/Adguard/Conf",
          "container": "/opt/adguardhome/conf"
        }
      ]
    },
    {
      "type": 1,
      "name": "mongodb",
      "title": "MongoDB",
      "note": "",
      "description": "MongoDB is a source-available cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with optional schemas. <a href='https://www.mongodb.com/' target='_blank'>Website</a>. <a href='https://hub.docker.com/_/mongo' target='_blank'>Docker Hub</a>",
      "logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/mongodb.png",
      "image": "mongo",
      "categories": [
        "Database"
      ],
      "volumes": [
        {
          "bind": "/home/docker/mongodb",
          "container": "/data/db",
          "mode": "rw"
        }
      ],
      "ports" : [
        {
          "host": "27017",
          "container": "27017"
        }
      ],
      "env": [
        {
          "name": "MONGO_INITDB_ROOT_USERNAME",
          "label": "Root Username",
          "description": "Root username for MongoDB",
          "type": "text",
          "default": "root"
        },
        {
          "name": "MONGO_INITDB_ROOT_PASSWORD",
          "label": "Root Password",
          "description": "Root password for MongoDB",
          "type": "password",
          "default": "password"
        }
      ]
    },
    {
      "type": 1,
      "name": "cratedb",
      "title": "CrateDB",
      "note": "",
      "description": "CrateDB is a distributed SQL database that combines SQL and search in a way that's simple to scale. It is designed to be highly available, horizontally scalable, and easy to use. <a href='https://crate.io/' target='_blank'>Website</a>. <a href='https://hub.docker.com/_/crate' target='_blank'>Docker Hub</a>",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/cratedb.png",
      "image": "crate",
      "categories": [
        "Database"
      ],
      "volumes": [
        {
          "bind": "/home/docker/cratedb",
          "container": "/data",
          "mode": "rw"
        }
      ],
      "ports" : [
        {
          "host": "4200",
          "container": "4200"
        },
        {
          "host": "4300",
          "container": "4300"
        }
      ],
      "env": [
        {
          "name": "CRATE_HEAP_SIZE",
          "label": "Heap Size",
          "description": "Heap size for CrateDB",
          "type": "text",
          "default": "2g"
        }
      ]
    },
    {
      "type": 1,
      "name": "elasticsearch",
      "title": "Elasticsearch",
      "note": "",
      "description": "Elasticsearch is a distributed, RESTful search and analytics engine capable of solving a growing number of use cases. It provides a distributed, multitenant-capable full-text search engine with an HTTP web interface and schema-free JSON documents. <a href='https://www.elastic.co/' target='_blank'>Website</a>. <a href='https://hub.docker.com/_/elasticsearch' target='_blank'>Docker Hub</a>",
      "logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/elasticsearch.png",
      "image": "elasticsearch:8.13.4",
      "categories": [
        "Database"
      ],
      "volumes": [
        {
          "bind": "/home/docker/elasticsearch",
          "container": "/usr/share/elasticsearch/data",
          "mode": "rw"
        }
      ],
      "ports" : [
        {
          "host": "9200",
          "container": "9200"
        },
        {
          "host": "9300",
          "container": "9300"
        }
      ],
      "env": [
        {
          "name": "discovery.type",
          "label": "Discovery Type",
          "description": "Discovery type for Elasticsearch",
          "type": "text",
          "default": "single-node"
        }
      ]
    },
    {
      "type": 1,
      "title": "SQL Server",
      "name": "mssql",
      "description": "Official image for Microsoft SQL Server based on Ubuntu 20.04. <a href=\"https://hub.docker.com/_/microsoft-mssql-server\" target=\"_blank\">Docker Hub</a>",
      "categories": [
        "Database"
      ],
      "platform": "linux",
      "note": "Requires at least 2GB of RAM. Make sure to assign enough memory to the Docker VM if you're running on Docker for Mac or Windows. Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "mcr.microsoft.com/mssql/server:2022-latest",
      "ports": [
        "1433/tcp"
      ],
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "MSSQL_SA_PASSWORD",
          "label": "MSSQL_SA_PASSWORD",
          "default": "YOUR_STRONG_PASSWORD"
        },
        {
          "name": "MSSQL_PID",
          "label": "MSSQL_PID",
          "default": "Developer"
        }
      ]
    },
    {
      "name": "redis",
      "title": "Redis",
      "note": "",
      "description": "Redis is an in-memory data structure project implementing a distributed, in-memory key-value database with optional durability. Redis supports different kinds of abstract data structures, such as strings, lists, maps, sets, sorted sets, HyperLogLogs, bitmaps, streams, and spatial indexes. <a href='https://redis.io/' target='_blank'>Website</a>. <a href='https://hub.docker.com/_/redis' target='_blank'>Docker Hub</a>",
      "logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/redis.png",
      "image": "redis",
      "categories": [
        "Database"
      ],
      "volumes": [
        {
          "bind": "/home/docker/redis",
          "container": "/data",
          "mode": "rw"
        }
      ],
      "ports" : [
        {
          "host": "6379",
          "container": "6379"
        }
      ],
      "env": [
        {
          "name": "REDIS_PASSWORD",
          "label": "Password",
          "description": "Password for Redis",
          "type": "password",
          "default": "password"
        }
      ]
    },
    {
      "type": 1,
      "title": "Joomla",
      "name": "joomla",
      "description": "Joomla! is an award-winning content management system (CMS), which enables you to build web sites and powerful online applications.",
      "categories": [
        "CMS"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/joomla.png",
      "image": "joomla:latest",
      "env": [
        {
          "name": "JOOMLA_DB_HOST",
          "label": "MySQL database host",
          "type": "container"
        },
        {
          "name": "JOOMLA_DB_PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Drupal",
      "name": "drupal",
      "description": "Open-source content management framework",
      "categories": [
        "CMS"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/drupal.png",
      "image": "drupal:latest",
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "name": "cockroachdb",
      "title": "CockroachDB",
      "note": "",
      "description": "CockroachDB is a distributed SQL database built on a transactional and strongly-consistent key-value store. It scales horizontally; survives disk, machine, rack, and even datacenter failures with minimal latency disruption and no manual intervention; supports strongly-consistent ACID transactions; and provides a familiar SQL API for structuring, manipulating, and querying data. <a href='https://www.cockroachlabs.com/' target='_blank'>Website</a>. <a href='https://hub.docker.com/_/cockroachdb' target='_blank'>Docker Hub</a>",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/cockroachdb.png",
      "image": "cockroachdb/cockroach",
      "categories": [
        "Database"
      ],
      "volumes": [
        {
          "bind": "/home/docker/cockroachdb",
          "container": "/cockroach/cockroach-data",
          "mode": "rw"
        }
      ],
      "ports" : [
        {
          "host": "26257",
          "container": "26257"
        },
        {
          "host": "8080",
          "container": "8080"
        }
      ],
      "env": [
        {
          "name": "COCKROACH_CHANNEL",
          "label": "Channel",
          "description": "CockroachDB channel",
          "type": "text",
          "default": "stable"
        },
        {
          "name": "COCKROACH_USER",
          "label": "User",
          "description": "Database user",
          "type": "text",
          "default": "root"
        },
        {
          "name": "COCKROACH_PASSWORD",
          "label": "Password",
          "description": "Database password",
          "type": "password",
          "default": "password"
        }
      ]
    },
    {
      "type": 1,
      "name": "mariadb",
      "title": "MariaDB",
      "note": "",
      "description": "MariaDB is a community-developed, commercially supported fork of the MySQL relational database management system (RDBMS), intended to remain free and open-source software under the GNU General Public License. Development is led by some of the original developers of MySQL, who forked it due to concerns over its acquisition by Oracle Corporation in 2009. <a href='https://mariadb.org/' target='_blank'>Website</a>. <a href='https://hub.docker.com/_/mariadb' target='_blank'>Docker Hub</a>",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/mariadb.png",
      "image": "mariadb",
      "categories": [
        "Database"
      ],
      "volumes": [
        {
          "bind": "/home/docker/mariadb",
          "container": "/var/lib/mysql",
          "mode": "rw"
        }
      ],
      "ports" : [
        {
          "host": "3306",
          "container": "3306"
        }
      ],
      "env": [
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root Password",
          "description": "Root password for MariaDB",
          "type": "password",
          "default": "password"
        },
        {
          "name": "MYSQL_DATABASE",
          "label": "Database",
          "description": "Database name",
          "type": "text",
          "default": "heimdall"
        },
        {
          "name": "MYSQL_USER",
          "label": "User",
          "description": "Database user",
          "type": "text",
          "default": "heimdall"
        },
        {
          "name": "MYSQL_PASSWORD",
          "label": "Password",
          "description": "Database password",
          "type": "password",
          "default": "password"
        }
      ]
    },
    {
      "type": 1,
      "name": "couchdb",
      "title": "CouchDB",
      "note": "",
      "description": "Apache CouchDB is open source database software that focuses on ease of use and having a scalable architecture. It has a document-oriented NoSQL database architecture and is implemented in the concurrency-oriented language Erlang; it uses JSON to store data, JavaScript as its query language using MapReduce, and HTTP for an API. <a href='https://couchdb.apache.org/' target='_blank'>Website</a>. <a href='https://hub.docker.com/_/couchdb' target='_blank'>Docker Hub</a>",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/couchdb.png",
      "image": "couchdb",
      "categories": [
        "Database"
      ],
      "volumes": [
        {
          "bind": "/home/docker/couchdb",
          "container": "/opt/couchdb/data",
          "mode": "rw"
        }
      ],
      "ports" : [
        {
          "host": "5984",
          "container": "5984"
        }
      ],
      "env": [
        {
          "name": "COUCHDB_USER",
          "label": "User",
          "description": "Database user",
          "type": "text",
          "default": "heimdall"
        },
        {
          "name": "COUCHDB_PASSWORD",
          "label": "Password",
          "description": "Database password",
          "type": "password",
          "default": "password"
        }
      ]
    },
    {
      "type": 1,
      "name": "nvidia-hwa-test",
      "title": "NVIDIA-HWA-Test",
      "note": "",
      "description": "Nvidia HWA Test is a test container for NVIDIA hardware acceleration. Start the container then check the logs to confirm your output matches the example from this page: <a href='https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/sample-workload.html'>Running a Sample Workload</a>. <a href='https://www.nvidia.com/' target='_blank'>Website</a>. <a href='https://hub.docker.com/r/nvidia/cuda' target='_blank'>Docker Hub</a>",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/lllllllillllllillll/DweebUI-Icons/main/nvidia.png",
	    "image": "nvidia/cuda:12.2.0-base-ubuntu20.04",
      "env": [
        {
          "name": "DRINODE",
          "label": "DRINODE",
          "default": "/dev/dri/renderD128",
          "description": "Specify the render device (GPU) for the contianer to use."
        }
      ],
      "command": "nvidia-smi"  
    }
  ]
}